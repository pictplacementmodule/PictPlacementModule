{"version":3,"sources":["containers/Login/Login.module.css","Role.js","axios.js","containers/Login/Login.js","components/Dashboard/Dashboard.js","components/Invalid.js","components/ProtectedRoute.js","containers/Student/Profile/Personal.js","actions/Student.js","containers/Student/Profile/Academic.js","containers/Student/Profile/Review.js","containers/Student/Profile/Profile.js","containers/Student/Company/Visited.js","containers/Student/Company/CurrentCompanies.js","containers/Student/Student.js","containers/Company/Profile/Profile.js","containers/Admin/Company/EditCom.js","components/Pagination.js","containers/Admin/BranchReport.js","containers/Admin/Company/CompanyDetails.js","containers/Admin/Company/AllCompanies.js","containers/Admin/CountReport.js","containers/Admin/SkillsReport.js","containers/Admin/StudentReport.js","containers/Admin/AddUser.js","containers/Admin/pendingRequest.js","containers/Admin/PlaceStudents.js","containers/Admin/Company/AddCompany.js","containers/Admin/Admin.js","containers/Company/Profile/JobDetails.js","containers/Company/Filter.js","containers/Company/Eligible/ShortListed.js","containers/Company/Eligible/PendingSelected.js","containers/Company/Eligible/Placed.js","containers/Company/Company.js","App.js","serviceWorker.js","reducers/Personal.js","reducers/Academic.js","reducers/rootReducer.js","index.js"],"names":["module","exports","makeStyles","theme","root","display","justifyContent","alignItems","height","formControl","margin","spacing","group","rootPaper","padding","flexDirection","button","width","marginTop","instance","axios","create","baseURL","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","styles","backgroundColor","green","palette","dark","icon","fontSize","iconVariant","opacity","marginRight","message","MySnackbarContentWrapper","props","classes","className","onClose","variant","other","Icon","SnackbarContent","clsx","aria-describedby","id","action","IconButton","key","aria-label","color","onClick","Login","state","loggedIn","username","password","type","open","loginHandler","event","preventDefault","user","pass","post","then","response","console","log","data","s","toLowerCase","localStorage","setItem","toUpperCase","setState","history","push","pathname","catch","changeHandler","name","newState","target","value","handleClose","reason","this","classes2","login","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","style","font","fontFamily","AppBar","position","Toolbar","Typography","marginLeft","Container","component","maxWidth","CssBaseline","paper","src","borderRadius","form","noValidate","onSubmit","TextField","required","fullWidth","label","autoComplete","autoFocus","onChange","FormControlLabel","control","Checkbox","Button","outline","submit","Grid","container","item","xs","Component","withRouter","withStyles","useStyles","appBar","zIndex","drawer","flexShrink","drawerPaper","content","flexGrow","toolbar","mixins","logout","fontWeight","drawerListNames","Object","keys","drawerList","React","useState","selectedList","setSelected","useEffect","temp","i","length","getItem","noWrap","Chip","scrolldelay","removeItem","Drawer","List","map","text","index","data-tip","data-for","ListItem","selected","match","path","buttonHandler","ListItemIcon","ListItemText","primary","Divider","place","effect","children","invalid","to","protectedRoute","rest","token","render","Invalid","Personal","genders","disability","blah","formErrors","Fragment","gutterBottom","sm","disabled","aadharNumber","errors","pancardNumber","firstName","middleName","lastName","mobileNumber1","mobileNumber2","email","alternateEmail","utils","DateFnsUtils","dateOfBirth","date","onChangeDate","KeyboardButtonProps","select","gender","option","MenuItem","xm","currentAddress","permanentAddress","fatname","motname","occupation","anninc","connect","rollno","personal","modileNumber1","modileNumber2","valid","dispatch","parName","branches","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","marginBottom","boxSizing","heading","typography","pxToRem","fontWeightRegular","flexWrap","textField","chips","chip","minWidth","divider","state2","academic","onChange2","name1","name2","par1Name","par2Name","onChangeYearOfPassing","year","onSwitch","diploma","toggleChecked","checked","skills","setSkills","get","twelfth","branch","prnNumber","collegeId","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","percentage","tenth","boardOfEducation","DatePicker","views","yearOfPassing","disableToolbar","educationGap","reasonOfGap","engineeringStartYear","sgpa","aggregate","engineering","fefs","fess","marks","sefs","sess","tefs","tess","activeBacklogs","passiveBacklogs","yeardowns","FormControl","InputLabel","htmlFor","Select","multiple","skill","input","Input","renderValue","indexOf","Review","statePersonal","stateAcademic","onNext","listItem","total","title","steps","Profile","activeStep","per","aca","agree","handleClickOpen","handleClickClose","agreed","handleNext","newActiveStep","p","slice","e","values","some","a","roll_no","percentageTenth","percentageTwelfth","percentageDiploma","percentageEngineering","boeTenth","boeTwelfth","boeDiploma","yopTenth","yopTwelfth","yopDiploma","gapTenth","gapTwelfth","gapDiploma","rogTenth","rogTwelfth","rogDiploma","sgpaFEFS","sgpaFESS","sgpaSEFS","sgpaSESS","sgpaTEFS","sgpaTESS","sgpaAggregate","marksFEFS","marksFESS","marksSEFS","marksSESS","marksTEFS","marksTESS","handleBack","step","Error","layout","Paper","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","align","Stepper","stepper","Step","StepLabel","getStepContent","buttons","Visited","companies","company","scope","sno","cgpa","bec","ce","bee","entc","beit","mece","meentc","meit","m","f","t","sal","vistdate","tsal","PureComponent","defaultProps","headerHeight","rowHeight","flexContainer","tableRow","cursor","tableRowHover","grey","tableCell","flex","noClick","Current","criteria","package_lpa","final_date","start_date","join","overflowX","table","Student","ProtectedRoute","Dashboard","exact","cities","setCities","setOpen","cpName","cpEmail1","cpEmail2","contactNo1","contactNo2","contactNo3","package","startDate","Date","endDate","numberOfStudents","city","computer","it","successSnackBar","da","setError","emptyError","setEmptyError","handleChange","test","Number","handleChecked","toggleBacklogs","Switch","getFullYear","getMonth","getDate","handleDateChange","st","n","y","k","j","c","resetState","industry","cpname","cpemail1","cpemail2","contactno1","contactno2","contactno3","passive_backlogs","active_backlogs","end_date","no_of_students","locality","size","AddVisited","setMessage","setVariant","params","cname","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","paginatePrev","currentPage","setCurrentPage","Math","ceil","class","number","clickHandler","BranchReport","students","show","setTimeout","pageStand","pageNumber","indexOfLastPost","indexOfFirstPost","currentPosts","FormLabel","FormGroup","row","ButtonGroup","trigger","componentRef","student","ref","el","root2","listStyleType","textAlign","CompanyDetails","branchesPreffered","l","filter","val","printButton","Array","String","button2","tableText","classGrid","transition","AllCompanies","finalDate","dateChangeHandler","dateChangeHandlerPersonal","newCompanies","temp_final_date","companyHandler","window","submitHandler","submitHandler3","submitHandler2","final","retrieve","tr","shouldDisableDate","CountReport","printDocument","count","SkillsReport","document","getElementById","visibility","print","StudentReport","left","AddUser","setSkill","setCity","types","direction","location","status","reload","roll","stu_name","comp_name","PlaceStudents","Admin","Home","AddCompany","EditCompany","PendingRequests","JobProfile","jobDesc","jobDesignation","fetched","setFetched","multiline","rows","Filter","internship","x","selectAll","temp2","selectAllHandler","v","prev","clickHandlerForAccept","toString","comp_id","handleChangeIndex","splice","findIndex","ShortListed","Company","Job_Details","Pending_Selected","Placed","App","Boolean","hostname","initialState","reducer","undefined","reg2","reg","par","par2","concat","rootReducer","combineReducers","PersonalReducer","AcademicReducer","store","createStore","RootReducer","app","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4fbf1d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"Login_paper__Lqxc1\",\"login\":\"Login_login__2an7X\",\"avatar\":\"Login_avatar__3eGQ6\",\"form\":\"Login_form__3Fmyp\",\"root\":\"Login_root__2_7VY\",\"image\":\"Login_image__2NasF\",\"submit\":\"Login_submit__13Hq6\",\"logout\":\"Login_logout__uE21M\",\"navbar\":\"Login_navbar__1Eeg4\"};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100vh',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(3),\r\n    },\r\n    group: {\r\n        margin: theme.spacing(1, 0),\r\n    },\r\n    rootPaper: {\r\n        padding: theme.spacing(3, 10),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        width: '10vw',\r\n        height: '6vh',\r\n        marginTop: '0',\r\n    },\r\n}));\r\n\r\nexport default function RadioButtonsGroup(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('company');\r\n\r\n    function handleChange(event) {\r\n        setValue(event.target.value);\r\n    }\r\n\r\n    const handleLogin = () => {\r\n        props.history.push({\r\n            pathname: '/'+value,\r\n            state:{\r\n                type: value,\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.rootPaper}>\r\n                <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                    <FormLabel component=\"legend\">Select a choice</FormLabel>\r\n                    <RadioGroup\r\n                        aria-label=\"user\"\r\n                        name=\"user\"\r\n                        className={classes.group}\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                    >\r\n                        <FormControlLabel value=\"student\" control={<Radio />} label=\"Student\" />\r\n                        <FormControlLabel value=\"company\" control={<Radio />} label=\"Company\" />\r\n                        <FormControlLabel value=\"admin\" control={<Radio />} label=\"Admin\" />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n                <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={handleLogin}>\r\n                    Go to Login\r\n                </Button>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:8080\"\r\n});\r\n\r\nexport default instance;\r\n","import React, { Component } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classes from \"./Login.module.css\";\r\nimport axios from \"../../axios\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\n\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n// import moment from \"moment\";\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst styles = makeStyles(theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n  const classes = styles();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\nMySnackbarContentWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\r\n};\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    loggedIn: false,\r\n    username: \"\",\r\n    password: \"\",\r\n    type: \"\",\r\n    error: false,\r\n    open: false,\r\n  };\r\n\r\n  loginHandler = event => {\r\n    event.preventDefault();\r\n    let user = {\r\n      id: this.state.username,\r\n      pass: this.state.password\r\n    };\r\n    axios\r\n      .post(\"/authenticate\", user)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        const s = response.data;\r\n        switch (s.toLowerCase()) {\r\n          case \"admin\":\r\n          case \"company\":\r\n          case \"student\":\r\n            localStorage.setItem(\"token\", user.id);\r\n            localStorage.setItem(\"active\",0);\r\n            localStorage.setItem(\"type\",s.toUpperCase());\r\n            this.setState({\r\n              ...this.state,\r\n              loggedIn: true,\r\n              error: false,\r\n              open: false,\r\n            });\r\n            this.props.history.push({\r\n              pathname: \"/\" + response.data + \"/dashboard\"\r\n            });\r\n            break;\r\n          default:\r\n            this.setState({\r\n              ...this.state,\r\n              loggedIn: false,\r\n              error: true,\r\n              open: true,\r\n            });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  changeHandler = name => event => {\r\n    let newState = { ...this.state, [name]: event.target.value };\r\n    this.setState(newState);\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      open: false,\r\n    })\r\n  };\r\n\r\n\r\n  render() {\r\n    const { classes2 } = this.props;\r\n    return (\r\n      <div className={classes.login}>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleClose}\r\n        >\r\n          <MySnackbarContentWrapper\r\n            variant=\"error\"\r\n            onClose={this.handleClose}\r\n            message=\"Invalid Details!\"\r\n          />\r\n        </Snackbar>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"7vh\",\r\n            font: \"Bold\",\r\n            fontSize: \"4vh\",\r\n            fontFamily: \"Comicsans\",\r\n            color: \"white\"\r\n          }}\r\n        >\r\n\r\n          <AppBar position=\"static\" style={{ backgroundColor: \"rgb(70,70,120)\" }}>\r\n            <Toolbar variant=\"dense\">\r\n              <Typography style={{ marginLeft: \"2vw\", fontSize: \"20px\" }} variant=\"h5\">\r\n                PUNE INSTITUTE OF COMPUTER TECHNOLOGY PLACEMENT-CELL\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </div>\r\n\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <img\r\n              src=\"https://upload.wikimedia.org/wikipedia/commons/f/f7/Pict_logo.png\"\r\n              style={{ height: \"12vh\", width: \"7vw\", borderRadius: 125 }}\r\n            ></img>{\" \"}\r\n            <Typography component=\"h1\" variant=\"h5\" style={{ marginTop: \"3vh\" }}>\r\n              SIGN IN\r\n            </Typography>{\" \"}\r\n            <form\r\n              className={classes.form}\r\n              noValidate\r\n              onSubmit={this.loginHandler}\r\n            >\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                error={this.state.error}\r\n                style={{ backgroundColor: \"rgba(255,255,255,0.8)\", borderRadius: \"5px\" }}\r\n                required\r\n                fullWidth\r\n                label=\"User ID\"\r\n                autoComplete=\"name\"\r\n                autoFocus\r\n                onChange={this.changeHandler(\"username\")}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                style={{ backgroundColor: \"rgba(255,255,255,0.8)\", borderRadius: \"5px\" }}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={this.changeHandler(\"password\")}\r\n                error={this.state.error}\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                style={{ outline: \"none\", backgroundColor: \"rgba(50,50,100,1)\", color: \"white\" }}\r\n                // color= \"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs></Grid>\r\n              </Grid>{\" \"}\r\n            </form>{\" \"}\r\n          </div>{\" \"}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(Login));","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    backgroundColor: \"rgb(70,70,120)\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3)\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  logout: {\r\n    marginLeft: \"auto\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"1rem\"\r\n  }\r\n}));\r\n\r\nfunction ClippedDrawer(props) {\r\n  const classes = useStyles();\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"active\");\r\n    localStorage.removeItem(\"type\");\r\n    props.history.push(\"/\");\r\n  };\r\n  const drawerListNames = Object.keys(props.drawerList);\r\n  const [selectedList, setSelected] = React.useState([]);\r\n\r\n  useEffect(() => {\r\n    let temp = [];\r\n    for (let i = 0; i < drawerListNames.length; i++) {\r\n      temp.push(false);\r\n    }\r\n    temp[localStorage.getItem(\"active\")] = true;\r\n    setSelected([\r\n      ...temp\r\n    ])\r\n  }, [])\r\n\r\n  const buttonHandler = (text, index) => {\r\n    localStorage.setItem(\"active\", index);\r\n    props.history.push(props.match.path + \"/\" + props.drawerList[text][0]);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <div className=\"col-lg-1\">\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/f/f7/Pict_logo.png\" height=\"60\" width=\"50\"></img>\r\n          </div>\r\n          <Grid container>\r\n            <Grid item xs={2}>\r\n              <Typography variant=\"h6\" noWrap style={{marginTop:\"4px\"}}>\r\n                PICT PLACEMENT\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <Chip style={{marginTop:\"4px\"}} label=\"Basic\" label={localStorage.getItem(\"type\") + \" LOGIN\"} />\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <Typography variant=\"h6\" style={{marginRight:\"20px\",marginLeft:\"20px\"}}>\r\n                <marquee scrolldelay=\"8\">\r\n                  Welcome to Pict Placement Module. Your ID  - {localStorage.getItem(\"token\")}\r\n                </marquee>\r\n              </Typography>\r\n            </Grid>\r\n            \r\n            <Grid item xs={1}>\r\n              <Button\r\n                onClick={() => logoutHandler(props)}\r\n                className={classes.logout}\r\n                color=\"inherit\"\r\n              >\r\n                Logout\r\n          </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n      >\r\n        <div className={classes.toolbar} />\r\n        <List>\r\n          {drawerListNames.map((text, index) => (\r\n            <div data-tip data-for={text} key={text}>\r\n              <ListItem\r\n\r\n                button\r\n                selected={selectedList[index]}\r\n                onClick={() => {\r\n                  buttonHandler(text, index);\r\n                }}\r\n              >\r\n                <ListItemIcon>{props.drawerList[text][1]}</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n\r\n              </ListItem>\r\n              <Divider />\r\n              <ReactTooltip id={text} place=\"right\" type=\"info\" effect='solid'>\r\n                <span>{props.drawerList[text][2]}</span>\r\n              </ReactTooltip>\r\n            </div>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {props.children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(ClippedDrawer);\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst invalid = () => {\r\n    return(\r\n        <div>\r\n            <h3>Please login to continue</h3>\r\n            <Link to='/' >Login</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default invalid","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport Invalid from '../components/Invalid'\r\n\r\nconst protectedRoute = ({component: Component, ...rest}) => {\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token==null){\r\n        loggedIn = false;\r\n    }\r\n\r\n    return (\r\n        <Route {...rest} \r\n            render = {(props) => {\r\n                if(loggedIn){\r\n                    return <Component {...props} />;\r\n                }\r\n                else{\r\n                    return <Invalid />;\r\n                }\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nexport default protectedRoute;","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux'\r\nimport * as actionTypes from '../../../actions/Student'\r\nimport axios from '../../../axios'\r\n\r\nclass Personal extends Component {\r\n\r\n  genders = ['Female', 'Male', 'Other'];\r\n\r\n\r\n  state = {\r\n    disability: '',\r\n  }\r\n\r\n  blah = () => (event) => {\r\n    this.setState({\r\n      ...this.state,\r\n      disability: event.target.value,\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    //errors recieved from reducer are in this.props.formerrors\r\n    //errors recieved from profile.js are in this.props.erros\r\n\r\n    // console.log(this.props.errors);\r\n    // console.log(this.props.formErrors);\r\n    const formErrors = this.props.formErrors;\r\n\r\n\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Personal details\r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              label=\"User Id\"\r\n              autoComplete=\"rn\"\r\n              fullWidth\r\n              disabled={true}\r\n              value={localStorage.getItem(\"token\")}\r\n            /*error={formErrors.rollno.length>0||this.props.errors.rollno.length>0}*/\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id=\"aadharNumber\"\r\n              name=\"aadharNumber\"\r\n              label=\"Aadhar card Number\"\r\n              fullWidth\r\n              onChange={this.props.onChange('aadharNumber')}\r\n              value={this.props.aadharNumber}\r\n              error={formErrors.aadharNumber.length > 0 || this.props.errors.aadharNumber.length > 0}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              name=\"pancardNumber\"\r\n              label=\"Pancard Number\"\r\n              fullWidth\r\n              onChange={this.props.onChange('pancardNumber')}\r\n              value={this.props.pancardNumber}\r\n              error={this.props.errors.pancardNumber.length > 0}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              required\r\n              label=\"First name\"\r\n              fullWidth\r\n              autoComplete=\"fname\"\r\n              onChange={this.props.onChange('firstName')}\r\n              value={this.props.firstName}\r\n              error={this.props.errors.firstName.length > 0}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id=\"middleName\"\r\n              name=\"middleName\"\r\n              label=\"Middle name\"\r\n              fullWidth\r\n              autoComplete=\"mname\"\r\n              onChange={this.props.onChange('middleName')}\r\n              value={this.props.middleName}\r\n              error={this.props.errors.middleName.length > 0}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              label=\"Last name\"\r\n              fullWidth\r\n              autoComplete=\"lname\"\r\n              onChange={this.props.onChange('lastName')}\r\n              value={this.props.lastName}\r\n              error={this.props.errors.lastName.length > 0}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              label=\"Mobile Number\"\r\n              fullWidth\r\n              onChange={this.props.onChange('mobileNumber1')}\r\n              value={this.props.mobileNumber1}\r\n              error={formErrors.mobileNumber1.length > 0 || this.props.errors.mobileNumber1.length > 0}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              label=\"Alternate Mobile Number\"\r\n              fullWidth\r\n              onChange={this.props.onChange('mobileNumber2')}\r\n              value={this.props.mobileNumber2}\r\n              error={formErrors.mobileNumber2.length > 0 || this.props.errors.mobileNumber2.length > 0}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              id=\"emailAddress\"\r\n              name=\"emailAddress\"\r\n              label=\"Email address\"\r\n              fullWidth\r\n              onChange={this.props.onChange('email')}\r\n              value={this.props.email}\r\n              error={formErrors.email.length > 0 || this.props.errors.email.length > 0}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              name=\"alternateEmail\"\r\n              label=\"Alternate Email address\"\r\n              fullWidth\r\n              onChange={this.props.onChange('alternateEmail')}\r\n              value={this.props.alternateEmail}\r\n              error={formErrors.alternateEmail.length > 0 || this.props.errors.alternateEmail.length > 0}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                fullWidth\r\n                margin=\"normal\"\r\n                id=\"dateOfBirth\"\r\n                label=\"Date of Birth\"\r\n                value={this.props.dateOfBirth}\r\n                onChange={(date) => this.props.onChangeDate(date, 'dateOfBirth')}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              id=\"gender\"\r\n              select\r\n              label=\"Gender\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              onChange={this.props.onChange('gender')}\r\n              value={this.props.gender}\r\n              error={this.props.errors.gender.length > 0}\r\n            >\r\n              {this.genders.map(option => (\r\n                <MenuItem key={option} value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={12} xm={6}>\r\n            <TextField\r\n              id=\"currentAddress\"\r\n              name=\"currentAddress\"\r\n              label=\"Current Address\"\r\n              fullWidth\r\n              autoComplete=\"billing address-line1\"\r\n              onChange={this.props.onChange('currentAddress')}\r\n              value={this.props.currentAddress}\r\n              error={this.props.errors.currentAddress.length > 0}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"permanentAddress\"\r\n              name=\"permanentAddress\"\r\n              label=\"Permanent Address\"\r\n              fullWidth\r\n              autoComplete=\"billing address-line2\"\r\n              onChange={this.props.onChange('permanentAddress')}\r\n              value={this.props.permanentAddress}\r\n              error={this.props.errors.permanentAddress.length > 0}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              label=\"Father's Name\"\r\n              fullWidth\r\n              onChange={this.props.onChange('fatname')}\r\n              value={this.props.fatname}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              label=\"Mother's Name\"\r\n              fullWidth\r\n              onChange={this.props.onChange('motname')}\r\n              value={this.props.motname}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              label=\"Occupation\"\r\n              fullWidth\r\n              onChange={this.props.onChange('occupation')}\r\n              value={this.props.occupation}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              label=\"Annual Income\"\r\n              fullWidth\r\n              onChange={this.props.onChange('anninc')}\r\n              value={this.props.anninc}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              label=\"Disability (If any)\"\r\n              fullWidth\r\n              onChange={this.props.onChange('disability')}\r\n              value={this.props.disability}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    rollno: state.personal.rollno,\r\n    aadharNumber: state.personal.aadharNumber,\r\n    pancardNumber: state.personal.pancardNumber,\r\n    firstName: state.personal.firstName,\r\n    middleName: state.personal.middleName,\r\n    lastName: state.personal.lastName,\r\n    mobileNumber1: state.personal.modileNumber1,\r\n    mobileNumber2: state.personal.modileNumber2,\r\n    email: state.personal.email,\r\n    alternateEmail: state.personal.alternateEmail,\r\n    dateOfBirth: state.personal.dateOfBirth,\r\n    gender: state.personal.gender,\r\n    currentAddress: state.personal.currentAddress,\r\n    permanentAddress: state.personal.permanentAddress,\r\n    formErrors: state.personal.formErrors,\r\n    valid: state.personal.valid,\r\n    fatname: state.personal.fatname,\r\n    motname: state.personal.motname,\r\n    disability: state.personal.disability,\r\n    anninc: state.personal.anninc,\r\n    occupation: state.personal.occupation,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onChange: (name) => (event) => dispatch({ type: actionTypes.CHANGE, parName: name, value: event.target.value }),\r\n    onChangeDate: (date, name) => dispatch({ type: actionTypes.CHANGE_DATE, parName: name, value: date }),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Personal);","export const CHANGE = 'CHANGE';\r\nexport const CHANGE_DATE = 'CHANGE_DATE';\r\nexport const CHANGE2 = 'CHANGE2';\r\nexport const CHANGE_YEAR_OF_PASSING = 'CHANGE_YEAR_OF_PASSING';\r\nexport const CHANGE_SWITCH = 'CHANGE_SWITCH';\r\nexport const HANDLE_NEXT_PERSONAL = 'HANDLE_NEXT_PERSONAL';\r\n","import React, { useEffect } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  DatePicker,\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport * as actionTypes from '../../../actions/Student'\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport axios from '../../../axios'\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst branches = ['Computer', 'IT', 'ENTC']\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    padding: theme.spacing(2),\r\n    boxSizing: 'border-box',\r\n    width: '68vw',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(0),\r\n    minWidth: '100%',\r\n    maxWidth: '100vw',\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n}));\r\n\r\nfunction Academic(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [checked, setChecked] = React.useState(props.state2.diploma);\r\n\r\n  const toggleChecked = (name) => (event) => {\r\n    props.onSwitch(name, event.target.checked);\r\n  };\r\n\r\n  const [skills, setSkills] = React.useState([]);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    axios.get('/findallskills')\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setSkills([...response.data]);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  let twelfth = null;\r\n\r\n  let firstYear = null;\r\n\r\n  let formErrors = props.state2.formErrors;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Academic Details <br />\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={4}>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={props.state2.twelfth}\r\n                onChange={toggleChecked('twelfth')}\r\n                color=\"secondary\"\r\n              />\r\n            }\r\n            label=\"Twelfth\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={props.state2.diploma}\r\n                onChange={toggleChecked('diploma')}\r\n                color=\"secondary\"\r\n              />\r\n            }\r\n            label=\"Diploma\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n            id=\"branch\"\r\n            select\r\n            label=\"Branch\"\r\n            fullWidth\r\n            value={props.state2.branch}\r\n            onChange={props.onChange('branch')}\r\n          >\r\n            {branches.map(option => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n            id=\"prnNumber\"\r\n            name=\"prnNumber\"\r\n            label=\"University PRN Number\"\r\n            autoComplete=\"rn\"\r\n            fullWidth\r\n            value={props.state2.prnNumber}\r\n            onChange={props.onChange('prnNumber')}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n            name=\"collegeId\"\r\n            label=\"TE Roll no\"\r\n            fullWidth\r\n            value={props.state2.collegeId}\r\n            onChange={props.onChange('collegeId')}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <br></br>\r\n      <br></br>\r\n      <Grid container spacing={3}>\r\n        {/* Tenth */}\r\n        <Grid item xs={12}>\r\n          <ExpansionPanel style={{backgroundColor:\"#fafafa\"}}>\r\n            <ExpansionPanelSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n            >\r\n              <Typography className={classes.heading}>Standard 10th</Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={4}>\r\n                  <TextField\r\n                    label=\"10th Percentage\"\r\n                    fullWidth\r\n                    value={props.state2.percentage.tenth}\r\n                    onChange={props.onChange2('percentage', 'tenth')}\r\n                    error={formErrors.percentage.tenth.length > 0}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                  <TextField\r\n                    label=\"Board of education (10th)\"\r\n                    fullWidth\r\n                    value={props.state2.boardOfEducation.tenth}\r\n                    onChange={props.onChange2('boardOfEducation', 'tenth')}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <DatePicker\r\n                      views={[\"year\"]}\r\n                      label=\"Year of passing (10th)\"\r\n                      value={props.state2.yearOfPassing.tenth}\r\n                      onChange={(year) => props.onChangeYearOfPassing(year, 'tenth')}\r\n                      variant=\"inline\"\r\n                      fullWidth\r\n                      disableToolbar\r\n                    />\r\n                  </MuiPickersUtilsProvider>\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                  <TextField\r\n                    label=\"Education gap after 10th\"\r\n                    fullWidth\r\n                    value={props.state2.educationGap.tenth}\r\n                    onChange={props.onChange2('educationGap', 'tenth')}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={8}>\r\n                  <TextField\r\n                    label=\"Reason of gap (10th)\"\r\n                    fullWidth\r\n                    value={props.state2.reasonOfGap.tenth}\r\n                    onChange={props.onChange2('reasonOfGap', 'tenth')}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n        </Grid>\r\n\r\n        {/* Twelfth */}\r\n        <Grid item xs={12}>\r\n          <ExpansionPanel disabled={!props.state2.twelfth} style={{backgroundColor:\"#fafafa\"}}>\r\n            <ExpansionPanelSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n            >\r\n              <Typography className={classes.heading}>Standard 12th</Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={4}>\r\n                  <TextField\r\n                    label=\"12th Percentage\"\r\n                    fullWidth\r\n                    value={props.state2.percentage.twelfth}\r\n                    onChange={props.onChange2('percentage', 'twelfth')}\r\n                    error={formErrors.percentage.twelfth.length > 0}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                  <TextField\r\n                    label=\"Board of education (12th)\"\r\n                    fullWidth\r\n                    value={props.state2.boardOfEducation.twelfth}\r\n                    onChange={props.onChange2('boardOfEducation', 'twelfth')}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <DatePicker\r\n                      views={[\"year\"]}\r\n                      label=\"Year of passing (12th)\"\r\n                      variant=\"inline\"\r\n                      disableToolbar\r\n                      fullWidth\r\n                      value={props.state2.yearOfPassing.twelfth}\r\n                      onChange={(year) => props.onChangeYearOfPassing(year, 'twelfth')}\r\n                    />\r\n                  </MuiPickersUtilsProvider>\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                  <TextField\r\n                    label=\"Education gap after 12th\"\r\n                    fullWidth\r\n                    value={props.state2.educationGap.twelfth}\r\n                    onChange={props.onChange2('educationGap', 'twelfth')}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={8}>\r\n                  <TextField\r\n                    label=\"Reason of gap (12th)\"\r\n                    fullWidth\r\n                    value={props.state2.reasonOfGap.twelfth}\r\n                    onChange={props.onChange2('reasonOfGap', 'twelfth')}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n        </Grid>\r\n\r\n        {/* Diploma */}\r\n        <Grid item xs={12}>\r\n          <ExpansionPanel disabled={!props.state2.diploma} style={{backgroundColor:\"#fafafa\"}}>\r\n            <ExpansionPanelSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n            >\r\n              <Typography className={classes.heading}>Diploma</Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={4}>\r\n                  <TextField\r\n                    label=\"Diploma Percentage\"\r\n                    fullWidth\r\n                    value={props.state2.percentage.diploma}\r\n                    onChange={props.onChange2('percentage', 'diploma')}\r\n                    error={formErrors.percentage.diploma.length > 0}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                  <TextField\r\n                    label=\"University of passing\"\r\n                    fullWidth\r\n                    value={props.state2.boardOfEducation.diploma}\r\n                    onChange={props.onChange2('boardOfEducation', 'diploma')}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <DatePicker\r\n                      views={[\"year\"]}\r\n                      label=\"Year of passing (diploma)\"\r\n                      value={props.state2.yearOfPassing.diploma}\r\n                      onChange={(year) => props.onChangeYearOfPassing(year, 'diploma')}\r\n                      variant=\"inline\"\r\n                      fullWidth\r\n                      disableToolbar\r\n                    />\r\n                  </MuiPickersUtilsProvider>\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                  <TextField\r\n                    label=\"Education gap after Diploma\"\r\n                    fullWidth\r\n                    value={props.state2.educationGap.diploma}\r\n                    onChange={props.onChange2('educationGap', 'diploma')}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={8}>\r\n                  <TextField\r\n                    label=\"Reason of gap (Diploma)\"\r\n                    fullWidth\r\n                    value={props.state2.reasonOfGap.diploma}\r\n                    onChange={props.onChange2('reasonOfGap', 'diploma')}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n        </Grid>\r\n      </Grid>\r\n      <br></br>\r\n      <br></br>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={4}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <DatePicker\r\n              views={[\"year\"]}\r\n              label=\"Engineering start year\"\r\n              variant=\"inline\"\r\n              disableToolbar\r\n              fullWidth\r\n              value={props.state2.engineeringStartYear}\r\n              onChange={(year) => props.onChangeDate(year, 'engineeringStartYear')}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n            label=\"Aggregate SGPA\"\r\n            fullWidth\r\n            value={props.state2.sgpa.aggregate}\r\n            onChange={props.onChange2('sgpa', 'aggregate')}\r\n            error={formErrors.sgpa.aggregate.length > 0}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n            label=\"Aggregate Percentage\"\r\n            fullWidth\r\n            value={props.state2.percentage.engineering}\r\n            onChange={props.onChange2('percentage', 'engineering')}\r\n            error={formErrors.percentage.engineering.length > 0}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <br></br>\r\n      <Grid container spacing={3}>\r\n        {/* Engineering first year */}\r\n        <Grid item xs={12}>\r\n          <ExpansionPanel disabled={props.state2.diploma} style={{backgroundColor:\"#fafafa\"}}>\r\n            <ExpansionPanelSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n            >\r\n              <Typography className={classes.heading}>Engineering First Year</Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={3}>\r\n                  <TextField\r\n                    label=\"First sem SGPA\"\r\n                    fullWidth\r\n                    value={props.state2.sgpa.fefs}\r\n                    onChange={props.onChange2('sgpa', 'fefs')}\r\n                    error={formErrors.sgpa.fefs.length > 0}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                  <TextField\r\n                    label=\"Second sem SGPA\"\r\n                    fullWidth\r\n                    value={props.state2.sgpa.fess}\r\n                    onChange={props.onChange2('sgpa', 'fess')}\r\n                    error={formErrors.sgpa.fess.length > 0}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                  <TextField\r\n                    label=\"First sem marks\"\r\n                    fullWidth\r\n                    value={props.state2.marks.fefs}\r\n                    onChange={props.onChange2('marks', 'fefs')}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                  <TextField\r\n                    label=\"Second sem marks\"\r\n                    fullWidth\r\n                    value={props.state2.marks.fess}\r\n                    onChange={props.onChange2('marks', 'fess')}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n        </Grid>\r\n        {/* Engineering second year */}\r\n        <Grid item xs={12}>\r\n          <ExpansionPanel style={{backgroundColor:\"#fafafa\"}}>\r\n            <ExpansionPanelSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n            >\r\n              <Typography className={classes.heading}>Engineering Second Year</Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={3}>\r\n                  <TextField\r\n                    label=\"First sem SGPA\"\r\n                    fullWidth\r\n                    value={props.state2.sgpa.sefs}\r\n                    onChange={props.onChange2('sgpa', 'sefs')}\r\n                    error={formErrors.sgpa.sefs.length > 0}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                  <TextField\r\n                    label=\"Second sem SGPA\"\r\n                    fullWidth\r\n                    value={props.state2.sgpa.sess}\r\n                    onChange={props.onChange2('sgpa', 'sess')}\r\n                    error={formErrors.sgpa.sess.length > 0}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                  <TextField\r\n                    label=\"First sem marks\"\r\n                    fullWidth\r\n                    value={props.state2.marks.sefs}\r\n                    onChange={props.onChange2('marks', 'sefs')}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                  <TextField\r\n                    label=\"Second sem marks\"\r\n                    fullWidth\r\n                    value={props.state2.marks.sess}\r\n                    onChange={props.onChange2('marks', 'sess')}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n        </Grid>\r\n        {/* Engineering third year */}\r\n        <Grid item xs={12}>\r\n          <ExpansionPanel style={{backgroundColor:\"#fafafa\"}}>\r\n            <ExpansionPanelSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n            >\r\n              <Typography className={classes.heading}>Engineering Third Year</Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={3}>\r\n                  <TextField\r\n                    label=\"First sem SGPA\"\r\n                    fullWidth\r\n                    value={props.state2.sgpa.tefs}\r\n                    onChange={props.onChange2('sgpa', 'tefs')}\r\n                    error={formErrors.sgpa.tefs.length > 0}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                  <TextField\r\n                    label=\"Second sem SGPA\"\r\n                    fullWidth\r\n                    value={props.state2.sgpa.tess}\r\n                    onChange={props.onChange2('sgpa', 'tess')}\r\n                    error={formErrors.sgpa.tess.length > 0}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                  <TextField\r\n                    label=\"First sem marks\"\r\n                    fullWidth\r\n                    value={props.state2.marks.tefs}\r\n                    onChange={props.onChange2('marks', 'tefs')}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                  <TextField\r\n                    label=\"Second sem marks\"\r\n                    fullWidth\r\n                    value={props.state2.marks.tess}\r\n                    onChange={props.onChange2('marks', 'tess')}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n        </Grid>\r\n      </Grid>\r\n      {/* Backlogs and yeardowns */}\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n            label=\"No. of active backlogs\"\r\n            fullWidth\r\n            value={props.state2.activeBacklogs}\r\n            onChange={props.onChange('activeBacklogs')}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n            label=\"No. of passive backlogs\"\r\n            fullWidth\r\n            value={props.state2.passiveBacklogs}\r\n            onChange={props.onChange('passiveBacklogs')}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n            label=\"No. of yeardowns\"\r\n            fullWidth\r\n            value={props.state2.yeardowns}\r\n            onChange={props.onChange('yeardowns')}\r\n          />\r\n        </Grid>\r\n        {/* Skills */}\r\n        <Grid item xs={12}>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel htmlFor=\"select-multiple-checkbox\">Skillset</InputLabel>\r\n            <Select\r\n              multiple\r\n              value={props.state2.skill}\r\n              onChange={props.onChange('skill')}\r\n              input={<Input id=\"select-multiple-chip\" />}\r\n              renderValue={selected => (\r\n                <div className={classes.chips}>\r\n                  {selected.map(value => (\r\n                    <Chip key={value} label={value} className={classes.chip} />\r\n                  ))}\r\n                </div>\r\n              )}\r\n              MenuProps={MenuProps}\r\n              fullWidth\r\n            >\r\n              {skills.map(s => (\r\n                <MenuItem key={s} value={s}>\r\n                  <Checkbox checked={props.state2.skill.indexOf(s) > -1} />\r\n                  <ListItemText primary={s} />\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n      <br></br>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst matchStateToProps = (state) => {\r\n  return {\r\n    state2: state.academic,\r\n  };\r\n}\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n  return {\r\n    onChange: (name) => (event) => dispatch({ type: actionTypes.CHANGE, parName: name, value: event.target.value }),\r\n    onChange2: (name1, name2) => (event) => dispatch({ type: actionTypes.CHANGE2, par1Name: name1, par2Name: name2, value: event.target.value }),\r\n    onChangeYearOfPassing: (year, name) => dispatch({ type: actionTypes.CHANGE_YEAR_OF_PASSING, parName: name, value: year }),\r\n    onChangeDate: (year, name) => dispatch({ type: actionTypes.CHANGE_DATE, parName: name, value: year }),\r\n    onSwitch: (name, value) => dispatch({ type: actionTypes.CHANGE_SWITCH, parName: name, value: value })\r\n  }\r\n}\r\n\r\nexport default connect(matchStateToProps, matchDispatchToProps)(Academic);\r\n","import React from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { connect } from 'react-redux'\r\nimport * as actionTypes from '../../../actions/Student'\r\n\r\nconst products = [\r\n  { name: \"Product 1\", desc: \"A nice thing\", price: \"$9.99\" },\r\n  { name: \"Product 2\", desc: \"Another thing\", price: \"$3.45\" },\r\n  { name: \"Product 3\", desc: \"Something else\", price: \"$6.51\" },\r\n  { name: \"Product 4\", desc: \"Best thing of all\", price: \"$14.11\" },\r\n  { name: \"Shipping\", desc: \"\", price: \"Free\" }\r\n];\r\nconst addresses = [\r\n  \"1 Material-UI Drive\",\r\n  \"Reactville\",\r\n  \"Anytown\",\r\n  \"99999\",\r\n  \"USA\"\r\n];\r\nconst payments = [\r\n  { name: \"Backlog\", detail: \"No\" },\r\n  { name: \"Internships\", detail: \"2\" },\r\n  { name: \"Co-curriculars\", detail: \"Inter-college football team\" }\r\n];\r\n\r\nconst useStyles = (theme => ({\r\n  listItem: {\r\n    padding: theme.spacing(1, 0)\r\n  },\r\n  total: {\r\n    fontWeight: \"700\"\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nclass Review extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(this.props);\r\n    this.state = {\r\n      ...this.props.statePersonal,\r\n      ...this.props.stateAcademic,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    console.log(this.state);\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <hr></hr>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Personal details\r\n        </Typography>\r\n        <hr></hr>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          First Name: {this.state.firstName}\r\n        </Typography>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Middle Name: {this.state.middleName}\r\n        </Typography>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Last Name: {this.state.lastName}\r\n        </Typography>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Gender: {this.state.gender}\r\n        </Typography>\r\n        {/* <Typography variant=\"h6\" gutterBottom>\r\n          Date of birth: {this.state.dateOfBirth}\r\n        </Typography> */}\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Mobile no1.:{this.state.mobileNumber1}\r\n        </Typography>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Mobile no2.:{this.state.mobileNumber2}\r\n        </Typography>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          email: {this.state.email}\r\n        </Typography>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Current Address: {this.state.currentAddress}\r\n        </Typography>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Permanent Address: {this.state.permanentAddress}\r\n        </Typography>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Pancard Number: {this.state.pancardNumber}\r\n        </Typography>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Aadhar Number: {this.state.aadharNumber}\r\n        </Typography>\r\n        <hr></hr>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={12}>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              Academic details\r\n            </Typography>\r\n            <hr></hr>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Roll Number: {this.state.rollno}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              College Id: {this.state.collegeId}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              PRN Number: {this.state.prnNumber}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Branch: {this.state.branch}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Diploma: {this.state.diploma}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Active Backlogs: {this.state.activeBacklogs}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Passive Backlogs: {this.state.passiveBacklogs}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Yeardowns: {this.state.yeardowns}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Board of education(10th): {this.state.boardOfEducation.tenth}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Board of education(12th): {this.state.boardOfEducation.twelfth}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Board of education(diploma): {this.state.boardOfEducation.diploma}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Education gap after 10th: {this.state.educationGap.tenth}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Education gap after 12th: {this.state.educationGap.twelfth}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Reason of Gap (10th): {this.state.reasonOfGap.tenth}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Reason of Gap (12th): {this.state.reasonOfGap.twelfth}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Reason of Gap (diploma): {this.state.reasonOfGap.diploma}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Education gap after Diploma: {this.state.educationGap.diploma}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Percentage 10th: {this.state.percentage.tenth}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Percentage 12th: {this.state.percentage.twelfth}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Percentage diploma: {this.state.percentage.diploma}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Percentage engineering: {this.state.percentage.engineering}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Marks FEFS: {this.state.marks.fefs}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Marks FESS: {this.state.marks.fess}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Marks SEFS: {this.state.marks.sefs}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Marks SESS: {this.state.marks.sess}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Marks TEFS: {this.state.marks.tefs}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              SGPA FEFS: {this.state.sgpa.fefs}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              SGPA FESS: {this.state.sgpa.fess}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              SGPA SEFS: {this.state.sgpa.sefs}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              SGPA SESS: {this.state.sgpa.sess}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              SGPA TEFS: {this.state.sgpa.tefs}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    statePersonal: state.personal,\r\n    stateAcademic: state.academic,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onNext: () => dispatch({ type: actionTypes.HANDLE_NEXT_PERSONAL }),\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(Review));","import React, { Component } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Personal from './Personal'\r\nimport Academic from './Academic'\r\nimport Review from './Review'\r\nimport { connect } from 'react-redux'\r\nimport * as actionTypes from '../../../actions/Student'\r\nimport axios from '../../../axios'\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst styles = (theme => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    padding: theme.spacing(2),\r\n    boxSizing: 'border-box',\r\n    width: '65vw',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    // backgroundColor: '#fafafa'\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n    // backgroundColor: '#fafafa'\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst steps = ['Personal details', 'Academic details', 'Review your profile'];\r\n\r\n\r\nclass Profile extends Component {\r\n\r\n  //branch2\r\n\r\n  state = {\r\n    activeStep: 0,\r\n    formErrors: {\r\n      rollno: '',\r\n      aadharNumber: '',\r\n      pancardNumber: '',\r\n      firstName: '',\r\n      middleName: '',\r\n      lastName: '',\r\n      mobileNumber1: '',\r\n      mobileNumber2: '',\r\n      email: '',\r\n      alternateEmail: '',\r\n      gender: '',\r\n      currentAddress: '',\r\n      permanentAddress: '',\r\n      per: {},\r\n      aca: {},\r\n      open: false,\r\n      agree: false,\r\n    }\r\n  }\r\n\r\n  getStepContent(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return <Personal errors={this.state.formErrors} />;\r\n      case 1:\r\n        return <Academic />;\r\n      case 2:\r\n        return <Review />;\r\n      default:\r\n        throw new Error('Unknown step');\r\n    }\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      open: true,\r\n    })\r\n  }\r\n\r\n  handleClickClose = (agreed) => {\r\n    this.setState({\r\n      ...this.state,\r\n      open: false,\r\n    })\r\n    console.log(agreed);\r\n    if(agreed){\r\n    axios.post('/addPersonaldetails', this.state.per)\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    axios.post('/addacademicdetails', this.state.aca)\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n      this.setState({ activeStep: this.state.activeStep+1 });\r\n    }\r\n  }\r\n\r\n  handleNext = () => {\r\n    let newActiveStep = this.state.activeStep;\r\n    switch (this.state.activeStep) {\r\n      case 0:\r\n        let p = {\r\n          ...this.props.statePersonal,\r\n          rollno: localStorage.getItem(\"token\"),\r\n        };\r\n        console.log(p);\r\n        let valid = p.valid;\r\n        let keys = Object.keys(p).slice(0, -2);\r\n        let e = {\r\n        }\r\n        keys.map((key) => {\r\n          if (p[key] === '') {\r\n            e[key] = 'This cannot be empty'\r\n          }\r\n          else {\r\n            e[key] = ''\r\n          }\r\n        })\r\n        this.setState({\r\n          ...this.state,\r\n          formErrors: {\r\n            ...e\r\n          },\r\n        })\r\n        if (Object.values(e).some((error) => error.length > 0)) {\r\n          valid = false;\r\n        }\r\n        else {\r\n          valid = true;\r\n        }\r\n        if (valid && this.props.statePersonal.valid) {\r\n          newActiveStep = this.state.activeStep + 1;\r\n        }\r\n        else {\r\n          newActiveStep = this.state.activeStep;\r\n        }\r\n        newActiveStep = this.state.activeStep + 1;\r\n        console.log(p);\r\n        console.log(\"before\");\r\n        this.setState({\r\n          ...this.state,\r\n          per: {\r\n            ...p,\r\n          }\r\n        })\r\n        // axios.post('/addPersonaldetails',p)\r\n        // .then((response) => {\r\n        //   console.log(response);\r\n        // })\r\n        // .catch((error) => {\r\n        //   console.log(error);\r\n        // });\r\n        break;\r\n      case 1:\r\n        let a = this.props.stateAcademic;\r\n        let academic = {\r\n          collegeId: localStorage.getItem(\"token\"),\r\n          branch: a.branch,\r\n          roll_no: a.collegeId,\r\n          prnNumber: a.prnNumber,\r\n          diploma: a.diploma,\r\n          twelfth: a.twelfth,\r\n          percentageTenth: a.percentage.tenth,\r\n          percentageTwelfth: null,\r\n          percentageDiploma: null,\r\n          percentageEngineering: a.percentage.engineering,\r\n          boeTenth: a.boardOfEducation.tenth,\r\n          boeTwelfth: null,\r\n          boeDiploma: null,\r\n          yopTenth: a.yearOfPassing.tenth,\r\n          yopTwelfth: null,\r\n          yopDiploma: null,\r\n          gapTenth: a.educationGap.tenth,\r\n          gapTwelfth: null,\r\n          gapDiploma: null,\r\n          rogTenth: a.reasonOfGap.tenth,\r\n          rogTwelfth: null,\r\n          rogDiploma: null,\r\n          engineeringStartYear: a.engineeringStartYear,\r\n          sgpaFEFS: null,\r\n          sgpaFESS: null,\r\n          sgpaSEFS: a.sgpa.sefs,\r\n          sgpaSESS: a.sgpa.sess,\r\n          sgpaTEFS: a.sgpa.tefs,\r\n          sgpaTESS: a.sgpa.tess,\r\n          sgpaAggregate: a.sgpa.aggregate,\r\n          marksFEFS: null,\r\n          marksFESS: null,\r\n          marksSEFS: a.marks.sefs,\r\n          marksSESS: a.marks.sess,\r\n          marksTEFS: a.marks.tefs,\r\n          marksTESS: a.marks.tess,\r\n          activeBacklogs: a.activeBacklogs,\r\n          passiveBacklogs: a.passiveBacklogs,\r\n          yeardowns: a.yeardowns,\r\n          skills: a.skill,\r\n        }\r\n\r\n        if (a.twelfth) {\r\n          academic = {\r\n            ...academic,\r\n            percentageTwelfth: a.percentage.twelfth,\r\n            boeTwelfth: a.boardOfEducation.twelfth,\r\n            yopTwelfth: a.yearOfPassing.twelfth,\r\n            gapTwelfth: a.educationGap.twelfth,\r\n            rogTwelfth: a.reasonOfGap.twelfth,\r\n            sgpaFEFS: a.sgpa.fefs,\r\n            sgpaFESS: a.sgpa.fess,\r\n            marksFEFS: a.marks.fefs,\r\n            marksFESS: a.marks.fess,\r\n          }\r\n        }\r\n        if (a.diploma) {\r\n          academic = {\r\n            ...academic,\r\n            percentageDiploma: a.percentage.diploma,\r\n            boeDiploma: a.boardOfEducation.diploma,\r\n            yopDiploma: a.yearOfPassing.diploma,\r\n            gapDiploma: a.educationGap.diploma,\r\n            rogDiploma: a.reasonOfGap.diploma,\r\n          }\r\n        }\r\n        // if (this.props.stateAcademic.valid) {\r\n        //   newActiveStep = this.state.activeStep + 1;\r\n        // }\r\n        // else {\r\n        //   newActiveStep = this.state.activeStep;\r\n        // }\r\n        // console.log(academic);\r\n        this.setState({\r\n          ...this.state,\r\n          aca: {\r\n            ...academic,\r\n          }\r\n        })\r\n        newActiveStep = this.state.activeStep + 1;\r\n        console.log(academic);\r\n        break;\r\n      case 2:\r\n        this.handleClickOpen();\r\n        console.log(this.state.agree);\r\n        break;\r\n    }\r\n    this.setState({ activeStep: newActiveStep });\r\n  };\r\n\r\n  handleBack = () => {\r\n    const newActiveStep = this.state.activeStep - 1;\r\n    this.setState({ activeStep: newActiveStep });\r\n  };\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <main className={classes.layout}>\r\n          <Paper className={classes.paper}>\r\n            <Dialog\r\n              open={this.state.open}\r\n              onClose={this.handleClickClose}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to save the profile?\"}</DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  You will be held responsible in case of any misinformation.\r\n          </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={() => this.handleClickClose(false)} color=\"primary\">\r\n                  Disagree\r\n                </Button>\r\n                <Button onClick={() =>this.handleClickClose(true)} color=\"primary\" autoFocus>\r\n                  Agree\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n              Student Profile\r\n            </Typography>\r\n            <Stepper activeStep={this.state.activeStep} className={classes.stepper}>\r\n              {steps.map(label => (\r\n                <Step key={label}>\r\n                  <StepLabel>{label}</StepLabel>\r\n                </Step>\r\n              ))}\r\n            </Stepper>\r\n            <React.Fragment>\r\n              {this.state.activeStep === steps.length ? (\r\n                <React.Fragment>\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Thank you for filling the profile.\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\">\r\n                  </Typography>\r\n                </React.Fragment>\r\n              ) : (\r\n                  <React.Fragment>\r\n                    {this.getStepContent(this.state.activeStep)}\r\n                    <div className={classes.buttons}>\r\n                      {this.state.activeStep !== 0 && (\r\n                        <Button onClick={this.handleBack} className={classes.button}>\r\n                          Back\r\n                      </Button>\r\n                      )}\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.handleNext}\r\n                        className={classes.button}\r\n                      >\r\n                        {this.state.activeStep === steps.length - 1 ? 'Save Profile' : 'Next'}\r\n                      </Button>\r\n                    </div>\r\n                  </React.Fragment>\r\n                )}\r\n            </React.Fragment>\r\n          </Paper>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    statePersonal: state.personal,\r\n    stateAcademic: state.academic,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onNext: () => dispatch({ type: actionTypes.HANDLE_NEXT_PERSONAL }),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Profile));","// import React, { Component } from \"react\";\r\n// import { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\n// import Table from \"@material-ui/core/Table\";\r\n// import TableBody from \"@material-ui/core/TableBody\";\r\n// import TableCell from \"@material-ui/core/TableCell\";\r\n// import TableHead from \"@material-ui/core/TableHead\";\r\n// import TableRow from \"@material-ui/core/TableRow\";\r\n// import Paper from \"@material-ui/core/Paper\";\r\n// import Grid from \"@material-ui/core/Grid\";\r\n// import axios from \"../../../axios\";\r\n// //import { makeData } from \"./Utils\";\r\n\r\n// // Import React Table\r\n// import ReactTable from \"react-table\";\r\n// import \"react-table/react-table.css\";\r\n// //import { AutoSizer, Column, Table } from 'react-virtualized';\r\n\r\n// const styles = theme => ({\r\n//   flexContainer: {\r\n//     display: \"flex\",\r\n//     alignItems: \"center\",\r\n//     boxSizing: \"border-box\"\r\n//   },\r\n//   tableRow: {\r\n//     cursor: \"pointer\"\r\n//   },\r\n//   tableRowHover: {\r\n//     \"&:hover\": {\r\n//       backgroundColor: theme.palette.grey[200]\r\n//     }\r\n//   },\r\n//   tableCell: {\r\n//     flex: 1\r\n//   },\r\n//   noClick: {\r\n//     cursor: \"initial\"\r\n//   }\r\n// });\r\n\r\n// class Visited extends React.PureComponent {\r\n//   static defaultProps = {\r\n//     headerHeight: 48,\r\n//     rowHeight: 48\r\n//   };\r\n\r\n//   state = {\r\n//     companies: []\r\n//   };\r\n\r\n//   constructor() {\r\n//     super();\r\n\r\n//     axios\r\n//       .get(\"/findallCompaniesVisited\")\r\n//       .then(response => {\r\n//         this.setState({ companies: response.data });\r\n//       })\r\n//       .catch(error => {\r\n//         console.log(error);\r\n//       });\r\n//   }\r\n\r\n//   render() {\r\n//     const { classes } = this.props;\r\n//     console.log(this.state.companies);\r\n\r\n//     return (\r\n//       <Paper className={classes.root}>\r\n//         <Grid>\r\n//           <Table className={classes.table}>\r\n//             <TableHead>\r\n//               <TableRow>\r\n//                 <TableCell align=\"centre\">Sno</TableCell>\r\n\r\n//                 <TableCell align=\"centre\">Company</TableCell>\r\n//                 <TableCell align=\"centre\">\r\n//                   Criteria and GPA\r\n//                   <TableCell align=\"centre\">GPA</TableCell>\r\n//                   <TableCell align=\"centre\">Branches</TableCell>\r\n//                 </TableCell>\r\n\r\n//                 <TableCell align=\"centre\" margin-left=\"100\">\r\n//                   UG\r\n//                   <TableCell align=\"inherit\">\r\n//                     BE-CE\r\n//                     <TableCell>S1</TableCell>\r\n//                     <TableCell>S2</TableCell>\r\n//                   </TableCell>\r\n//                   <TableCell align=\"inherit\">\r\n//                     BE-ENTC\r\n//                     <TableCell>S1</TableCell>\r\n//                     <TableCell>S2</TableCell>\r\n//                   </TableCell>\r\n//                   <TableCell align=\"inherit\"> BE-IT</TableCell>\r\n//                 </TableCell>\r\n//                 <TableCell align=\"centre\">\r\n//                   PG\r\n//                   <TableCell align=\"centre\">MECE</TableCell>\r\n//                   <TableCell align=\"centre\">MEIT</TableCell>\r\n//                   <TableCell align=\"centre\">ME ENTC</TableCell>\r\n//                 </TableCell>\r\n//                 <TableCell align=\"centre\">\r\n//                   Total\r\n//                   <TableCell>M</TableCell>\r\n//                   <TableCell>F</TableCell>\r\n//                   <TableCell>T</TableCell>\r\n//                 </TableCell>\r\n//                 <TableCell align=\"centre\">SalaryLPA</TableCell>\r\n//                 <TableCell align=\"centre\">VisitDate</TableCell>\r\n//                 <TableCell align=\"centre\">TotalSalaryLPA</TableCell>\r\n//               </TableRow>\r\n//             </TableHead>\r\n//             <TableBody>\r\n//               {this.state.companies.map(company => (\r\n//                 <TableRow key={company.id}>\r\n//                   <TableCell component=\"th\" scope=\"row\">\r\n//                     {company.sno}\r\n//                   </TableCell>\r\n//                   <TableCell align=\"right\">{company.company}</TableCell>\r\n//                   <TableCell align=\"right\">{company.criteria}</TableCell>\r\n//                   <TableCell align=\"right\">{company.ug}</TableCell>\r\n//                   <TableCell align=\"right\">{company.pg}</TableCell>\r\n//                   <TableCell align=\"right\">{company.total}</TableCell>\r\n//                   <TableCell align=\"right\">{company.salary}</TableCell>\r\n//                   <TableCell align=\"right\">{company.Visited}</TableCell>\r\n//                   <TableCell align=\"right\">{company.total}</TableCell>\r\n//                 </TableRow>\r\n//               ))}\r\n//             </TableBody>\r\n//           </Table>\r\n//         </Grid>\r\n//       </Paper>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default withStyles(styles)(Visited);\r\nimport React, { Component } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport axios from \"../../../axios\";\r\n// import \"bootstrap/dist/css/bootstrap.css\";\r\n//import { makeData } from \"./Utils\";\r\n\r\n// Import React Table\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\n//import { AutoSizer, Column, Table } from 'react-virtualized';\r\n\r\nconst styles = theme => ({\r\n  flexContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    boxSizing: \"border-box\"\r\n  },\r\n  tableRow: {\r\n    cursor: \"pointer\"\r\n  },\r\n  tableRowHover: {\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.grey[200]\r\n    }\r\n  },\r\n  tableCell: {\r\n    flex: 1\r\n  },\r\n  noClick: {\r\n    cursor: \"initial\"\r\n  }\r\n});\r\n\r\nclass Visited extends React.PureComponent {\r\n  static defaultProps = {\r\n    headerHeight: 48,\r\n    rowHeight: 48\r\n  };\r\n\r\n  state = {\r\n    companies: []\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    axios\r\n      .post(\"/findallCompaniesVisited\")\r\n      .then(response => {\r\n        this.setState({ companies: response.data });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    console.log(this.state.companies);\r\n\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <Grid>\r\n          <table className=\"table table-bordered table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th align=\"centre\">Sno</th>\r\n\r\n                <th align=\"centre\">Company</th>\r\n                \r\n                  <th align=\"centre\">CGPA</th>\r\n                  <th align=\"centre\">Branch</th>\r\n                  <th align=\"centre\">BEC</th>\r\n                  <th align=\"centre\">CE</th>\r\n                  <th align=\"centre\">BEE</th>\r\n                  <th align=\"centre\">ENTC</th>\r\n                  <th align=\"centre\">BEIT</th>\r\n                  <th align=\"centre\">MECE</th>\r\n                  <th align=\"centre\">MEEENTC</th>\r\n                  <th align=\"centre\">MEIT</th>\r\n                  <th align=\"centre\">M</th>\r\n                  <th align=\"centre\">F</th>\r\n                  <th align=\"centre\">T</th>\r\n                  <th align=\"centre\">SALLPA</th>\r\n                  <th align=\"centre\">VISITDATE</th>\r\n                  <th align=\"centre\">TSALLPA</th>\r\n                  \r\n\r\n                \r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.companies.map(company => (\r\n                <tr key={company.id}>\r\n                  <td component=\"th\" scope=\"row\">\r\n                    {company.sno}\r\n                  </td>\r\n                  <td>{company.company}</td>\r\n                  <td>{company.cgpa}</td>\r\n                  <td>{company.branch}</td>\r\n                  <td>{company.bec}</td>\r\n                  <td>{company.ce}</td>\r\n                  <td>{company.bee}</td>\r\n                  <td>{company.entc}</td>\r\n                  <td>{company.beit}</td>\r\n                  <td>{company.mece}</td>\r\n                  <td>{company.meentc}</td>\r\n                  <td>{company.meit}</td>\r\n                  <td>{company.m}</td>\r\n                  <td>{company.f}</td>\r\n                  <td>{company.t}</td>\r\n                  <td>{company.sal}</td>\r\n                  <td>{company.vistdate}</td>\r\n                  <td>{company.tsal}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Visited);","import React, { Component } from 'react'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport axios from '../../../axios';\r\n// import \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nconst styles = (theme => ({\r\n\r\n    palette: {\r\n        type: 'dark',\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\nclass Current extends Component {\r\n\r\n    state = {\r\n        companies: [],\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        axios.get('/industry/getUpcoming')\r\n            .then((response) => {\r\n                this.setState({ companies: response.data });\r\n                console.log(response.data)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Paper className={classes.root}>\r\n                <table className=\"table table-bordered table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th align=\"right\">Criteria</th>\r\n                            <th align=\"right\">Average Salary</th>\r\n                            <th align=\"right\">Tentative Date</th>\r\n                            <th align=\"right\">Skills</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.companies.map(company => (\r\n                            <tr key={company.id}>\r\n                                <td component=\"th\" scope=\"row\">\r\n                                    {company.name}\r\n                                </td>\r\n                                <td>{company.criteria}</td>\r\n                                <td>{company.package_lpa}</td>\r\n                                <td>{company.final_date===null?company.start_date:company.final_date}</td>\r\n                                <td>{company.skills.join(\", \")}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Current);","import React, { Component } from 'react'\r\nimport { Switch, Route, withRouter,Redirect } from 'react-router-dom'\r\nimport Login from '../Login/Login'\r\nimport Dashboard from '../../components/Dashboard/Dashboard'\r\nimport ProtectedRoute from '../../components/ProtectedRoute'\r\nimport DashboardIcon from '@material-ui/icons/Dashboard'\r\nimport Notifications from '@material-ui/icons/Notifications'\r\nimport DoneAll from '@material-ui/icons/DoneAll'\r\nimport News from '../../components/News'\r\nimport Profile from './Profile/Profile'\r\nimport Visited from './Company/Visited'\r\nimport Current from './Company/CurrentCompanies'\r\n\r\nclass Student extends Component {\r\n\r\n    drawerList = {\r\n        'My Profile':['profile', <DashboardIcon />,'See and edit my profile'],\r\n        'Companies Visiting':['current-companies', <Notifications />,'See upcoming companies'],\r\n        'Companies Visited':['companies-visited',<DoneAll />,'see companies already visited']    \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProtectedRoute path=\"/student/dashboard\" component={() =>\r\n                    <Dashboard drawerList={this.drawerList}>\r\n                    <Route exact path='/student/dashboard/profile' component={Profile} />\r\n                        <Route exact path='/student/dashboard/' component={Profile} />\r\n                        <Route exact path='/student/dashboard/current-companies' component={Current} />\r\n                        <Route exact path='/student/dashboard/companies-visited' component={Visited} />\r\n                    </Dashboard>\r\n                } />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Student);","import React, { useEffect } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport * as jsPDF from \"jspdf\";\r\nimport * as html2canvas from \"html2canvas\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from \"@material-ui/pickers\";\r\nimport axios from \"../../../axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport ReactTooltip from \"react-tooltip\"\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { amber, green } from \"@material-ui/core/colors\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\n// import moment from \"moment\";\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  success: {\r\n    backgroundColor: green[600]\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark\r\n  },\r\n  icon: {\r\n    fontSize: 20\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  message: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    padding: theme.spacing(2),\r\n    boxSizing: \"border-box\",\r\n    width: \"68vw\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\"\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor:\"rgb(70,70,120)\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  chip: {\r\n    margin: 2\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(0),\r\n    minWidth: \"100%\",\r\n    maxWidth: \"100vw\"\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n  const classes = useStyles();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"close\"\r\n          color=\"inherit\"\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\nMySnackbarContentWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf([\"error\", \"info\", \"success\", \"warning\"]).isRequired\r\n};\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nfunction Profile(props) {\r\n  const classes = useStyles();\r\n\r\n  const [skills, setSkills] = React.useState([]);\r\n  const [cities, setCities] = React.useState([]);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/findallskills\")\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setSkills([...response.data]);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n    axios\r\n      .get(\"/findalllocation\")\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setCities([...response.data]);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const [state, setState] = React.useState({\r\n    id: \"\",\r\n    name: \"\",\r\n    cpName: \"\",\r\n    cpEmail1: \"\",\r\n    cpEmail2: \"\",\r\n    contactNo1: \"\",\r\n    contactNo2: \"\",\r\n    contactNo3: \"\",\r\n    criteria: \"\",\r\n    passiveBacklogs: false,\r\n    activeBacklogs: false,\r\n    package: \"\",\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n    numberOfStudents: \"\",\r\n    skill: [],\r\n    city: [],\r\n    branches: {\r\n      computer: false,\r\n      it: false,\r\n      entc: false\r\n    },\r\n    successSnackBar: false\r\n  });\r\n  var da = [];\r\n  const [formErrors, setError] = React.useState({\r\n    name: \"\",\r\n    cpName: \"\",\r\n    cpEmail1: \"\",\r\n    cpEmail2: \"\",\r\n    contactNo1: \"\",\r\n    contactNo2: \"\",\r\n    contactNo3: \"\",\r\n    criteria: \"\",\r\n    package: \"\",\r\n    numberOfStudents: \"\"\r\n  });\r\n\r\n  const [emptyError, setEmptyError] = React.useState({});\r\n\r\n  const keys = [\"name\", \"cpName\", \"cpEmail1\", \"contactNo1\", \"package\"];\r\n\r\n  let e = {};\r\n  function validate() {\r\n    setEmptyError({});\r\n    keys.map(key => {\r\n      if (state[key].length == 0) {\r\n        e[key] = \"Empty\";\r\n      }\r\n    });\r\n    setEmptyError(e);\r\n  }\r\n\r\n  const submitHandler = event => {\r\n    // setOpen(true);\r\n    event.preventDefault();\r\n      var resetState = {\r\n        id: \"\",\r\n        name: \"\",\r\n        cpName: \"\",\r\n        cpEmail1: \"\",\r\n        cpEmail2: \"\",\r\n        contactNo1: \"\",\r\n        contactNo2: \"\",\r\n        contactNo3: \"\",\r\n        criteria: \"\",\r\n        passiveBacklogs: false,\r\n        activeBacklogs: false,\r\n        package: \"\",\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        numberOfStudents: \"\",\r\n        skill: [],\r\n        city: [],\r\n        branches: {\r\n          computer: false,\r\n          it: false,\r\n          entc: false\r\n        },\r\n        successSnackBar: true\r\n      };\r\n    var industry = {\r\n      id: state.id,\r\n      name: state.name,\r\n      cpname: state.cpName,\r\n      cpemail1: state.cpEmail1,\r\n      cpemail2: state.cpEmail2,\r\n      contactno1: state.contactNo1,\r\n      contactno2: state.contactNo2,\r\n      contactno3: state.contactNo3,\r\n      criteria: state.criteria,\r\n      passive_backlogs: state.passiveBacklogs,\r\n      active_backlogs: state.activeBacklogs,\r\n      package_lpa: state.package,\r\n      start_date: state.startDate,\r\n      end_date: state.endDate,\r\n      no_of_students: state.numberOfStudents,\r\n      skills: state.skill,\r\n      locality: state.city,\r\n      computer: state.branches.computer,\r\n      it: state.branches.it,\r\n      entc: state.branches.entc\r\n    };\r\n    validate();\r\n    var valid = true;\r\n    if (\r\n      Object.values(formErrors).some(error => error.length > 0) ||\r\n      Object.keys(e).length > 0\r\n    ) {\r\n      valid = false;\r\n    } else {\r\n      valid = true;\r\n    }\r\n    // valid = true;\r\n    console.log(valid);\r\n    if (valid) {\r\n      axios\r\n        .post(\"/industry/add\", industry)\r\n        .then(response => {\r\n          console.log(response);\r\n          setOpen(true);\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n    setState(resetState);\r\n  };\r\n  const handleChange = name => event => {\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value\r\n    });\r\n    const value = event.target.value;\r\n    let error = \"\";\r\n    let reg = \"\";\r\n    switch (name) {\r\n      case \"cpName\":\r\n        reg = /^[A-Za-z\\s]{1,}[\\.]{0,1}[A-Za-z\\s]{0,}$/;\r\n        error = reg.test(value) ? \"\" : \"Invalid CPName\";\r\n        break;\r\n      case \"cpEmail1\":\r\n      case \"cpEmail2\":\r\n        reg = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\r\n        error = reg.test(value) ? \"\" : \"Invalid Email\";\r\n        break;\r\n      case \"contactNo1\":\r\n      case \"contactNo2\":\r\n      case \"contactNo3\":\r\n        reg = /^\\d{10}$/;\r\n        error = reg.test(value) ? \"\" : \"Invalid Phone Number\";\r\n        break;\r\n      case \"criteria\":\r\n        error =\r\n          Number(value) > 0 && Number(value) < 10 ? \"\" : \"Invalid Criteria\";\r\n        break;\r\n      case \"package\":\r\n        reg = /^[0-9]+\\.?([0-9]+)?$/;\r\n        error = reg.test(value) ? \"\" : \"Invalid Package\";\r\n        break;\r\n      case \"numberOfStudents\":\r\n        error = Number(value) > 0 ? \"\" : \"Invalid Number Of Students\";\r\n        break;\r\n    }\r\n    setError({\r\n      ...formErrors,\r\n      [name]: error\r\n    });\r\n  };\r\n\r\n  const handleChecked = name => event => {\r\n    console.log(event.target.checked);\r\n    setState({\r\n      ...state,\r\n      branches: {\r\n        ...state.branches,\r\n        [name]: event.target.checked\r\n      }\r\n    });\r\n    console.log(state.branches);\r\n  };\r\n\r\n  const handleDateChange = (date, name) => {\r\n    console.log(date);\r\n    setState({\r\n      ...state,\r\n      [name]:\r\n        date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate()\r\n    });\r\n  };\r\n\r\n  const toggleBacklogs = name => event => {\r\n    if(name===\"activeBacklogs\"&&event.target.checked){\r\n      setState({\r\n        ...state,\r\n        passiveBacklogs:true,\r\n        [name]: event.target.checked,\r\n      })\r\n    }\r\n    else if(name===\"passiveBacklogs\"&&!event.target.checked){\r\n      setState({\r\n        ...state,\r\n        activeBacklogs:false,\r\n        [name]: event.target.checked,\r\n      })\r\n    }\r\n    else{\r\n      setState({\r\n        ...state,\r\n        [name]: event.target.checked,\r\n      })\r\n    }\r\n  };\r\n\r\n  const getDates = () => {\r\n    axios\r\n      .get(\"/industry/getDateList\", null)\r\n      .then(response => {\r\n        da = response.data;\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  getDates();\r\n\r\n  const retrieve = date => {\r\n    var sa = [];\r\n\r\n    var st = [];\r\n    var n = [];\r\n    var m = [];\r\n    var y = [];\r\n    var k = [];\r\n    let i = [];\r\n    for (i = 0; i < da.length; i++) {\r\n      st[i] = new Date(da[i]);\r\n    }\r\n    console.log(st);\r\n    for (i = 0; i < st.length; i++) {\r\n      n[i] = st[i].getDate();\r\n      m[i] = st[i].getMonth();\r\n      y[i] = st[i].getFullYear();\r\n    }\r\n    console.log(n,m,y);\r\n    for (let j = 0; j < st.length; j++)\r\n      k[j] =\r\n        n[j] === date.getDate() &&\r\n        m[j] === date.getMonth() &&\r\n        y[j] === date.getFullYear();\r\n\r\n    for (i = 0; i < st.length; i++) {\r\n      if (k[i]) {\r\n        return k[i];\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\"\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n      >\r\n        <MySnackbarContentWrapper\r\n          onClose={handleClose}\r\n          variant=\"success\"\r\n          message=\"Profile added successfully!\"\r\n        />\r\n      </Snackbar>\r\n      <Paper className={classes.paper}>\r\n        <Typography component=\"h2\" variant=\"h4\" align=\"center\">\r\n          Add Company\r\n        </Typography>\r\n        <br></br>\r\n        <div id=\"divToPrint\">\r\n          <form className={classes.container} noValidate autoComplete=\"off\">\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  data-tip data-for='companyId'\r\n                  label=\"Company Id\"\r\n                  fullWidth\r\n                  onChange={handleChange(\"id\")}\r\n                  value={state.id}\r\n                />\r\n\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  data-tip data-for='companyName'\r\n                  label=\"Company Name*\"\r\n                  fullWidth\r\n                  onChange={handleChange(\"name\")}\r\n                  value={state.name}\r\n                  error={formErrors.name.length > 0 || emptyError.name}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  label=\"Contact Person Name*\"\r\n                  fullWidth\r\n                  onChange={handleChange(\"cpName\")}\r\n                  value={state.cpName}\r\n                  error={formErrors.cpName.length > 0 || emptyError.cpName}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                data-tip data-for = \"Email1\"\r\n                  label=\" Email id 1*\"\r\n                  fullWidth\r\n                  onChange={handleChange(\"cpEmail1\")}\r\n                  value={state.cpEmail1}\r\n                  error={formErrors.cpEmail1.length > 0 || emptyError.cpEmail1}\r\n                />\r\n              <ReactTooltip id='Email1' type='info' effect='solid'>\r\n              <span>Enter email in format : example@demo.com</span>\r\n              </ReactTooltip>\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  label=\" Email id 2\"\r\n                  fullWidth\r\n                  onChange={handleChange(\"cpEmail2\")}\r\n                  value={state.cpEmail2}\r\n                  error={formErrors.cpEmail2.length > 0}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  data-tip data-for = \"contact1*\" \r\n                  label=\"Contact Number 1\"\r\n                  fullWidth\r\n                  onChange={handleChange(\"contactNo1\")}\r\n                  value={state.contactNo1}\r\n                  error={\r\n                    formErrors.contactNo1.length > 0 || emptyError.contactNo1\r\n                  }\r\n                />\r\n                <ReactTooltip id='cntact1' type='info' effect='solid'>\r\n              <span>Enter 10 digit contact number</span>\r\n              </ReactTooltip>\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  label=\"Contact Number 2\"\r\n                  fullWidth\r\n                  onChange={handleChange(\"contactNo2\")}\r\n                  value={state.contactNo2}\r\n                  error={formErrors.contactNo2.length > 0}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  label=\"Contact Number 3\"\r\n                  fullWidth\r\n                  onChange={handleChange(\"contactNo3\")}\r\n                  value={state.contactNo3}\r\n                  error={formErrors.contactNo3.length > 0}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                data-tip data-for = \"criteria\"\r\n                  label=\"Criteria\"\r\n                  fullWidth\r\n                  onChange={handleChange(\"criteria\")}\r\n                  value={state.criteria}\r\n                  error={formErrors.criteria.length > 0}\r\n                />\r\n                <ReactTooltip id='criteria' type='info' effect='solid'>\r\n              <span>Enter the CGPA criteria (should be less than 10)</span>\r\n              </ReactTooltip>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  label=\"Package*\"\r\n                  fullWidth\r\n                  onChange={handleChange(\"package\")}\r\n                  value={state.package}\r\n                  error={formErrors.package.length > 0 || emptyError.package}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  label=\"Number of Students\"\r\n                  fullWidth\r\n                  onChange={handleChange(\"numberOfStudents\")}\r\n                  value={state.numberOfStudents}\r\n                  error={formErrors.numberOfStudents.length > 0}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      checked={state.passiveBacklogs}\r\n                      onChange={toggleBacklogs(\"passiveBacklogs\")}\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  style={{\r\n                    boxSizing: \"border-box\",\r\n                    marginLeft: \"50px\",\r\n                    marginTop: \"20px\"\r\n                  }}\r\n                  label=\"Accept Passive Backlogs\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      checked={state.activeBacklogs}\r\n                      onChange={toggleBacklogs(\"activeBacklogs\")}\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  style={{ boxSizing: \"border-box\", marginTop: \"20px\" }}\r\n                  label=\"Accept Active Backlogs\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <Chip\r\n                  label=\"Branches Preferred\"\r\n                  style={{\r\n                    marginTop: \"6px\",\r\n                    boxSizing: \"border-box\",\r\n                    marginLeft: \"20px\"\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={2} align=\"left\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={state.branches.computer}\r\n                      onChange={handleChecked(\"computer\")}\r\n                      value=\"computer\"\r\n                    />\r\n                  }\r\n                  label=\"Computer\"\r\n                  style={{ boxSizing: \"border-box\", marginLeft: \"30px\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={state.branches.it}\r\n                      onChange={handleChecked(\"it\")}\r\n                      value=\"it\"\r\n                    />\r\n                  }\r\n                  label=\"Information Technology\"\r\n                  style={{ boxSizing: \"border-box\", marginLeft: \"45px\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={state.branches.entc}\r\n                      onChange={handleChecked(\"entc\")}\r\n                      value=\"entc\"\r\n                    />\r\n                  }\r\n                  label=\"Electronics and Telecommunication\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    fullWidth\r\n                    label=\"Preffered date\"\r\n                    fullWidth\r\n                    value={state.startDate}\r\n                    onChange={date => handleDateChange(date, \"startDate\")}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change date\"\r\n                    }}\r\n                    shouldDisableDate={retrieve}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n\r\n              <Grid item xs={6}>\r\n                <FormControl className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"select-multiple-checkbox\">\r\n                    Skills Required\r\n                  </InputLabel>\r\n                  <Select\r\n                    multiple\r\n                    value={state.skill}\r\n                    onChange={handleChange(\"skill\")}\r\n                    input={<Input id=\"select-multiple-chip\" />}\r\n                    renderValue={selected => (\r\n                      <div className={classes.chips}>\r\n                        {selected.map(value => (\r\n                          <Chip\r\n                            key={value}\r\n                            label={value}\r\n                            className={classes.chip}\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                    MenuProps={MenuProps}\r\n                    fullWidth\r\n                  >\r\n                    {skills.map(s => (\r\n                      <MenuItem key={s} value={s}>\r\n                        <Checkbox checked={state.skill.indexOf(s) > -1} />\r\n                        <ListItemText primary={s} />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <FormControl className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"select-multiple-checkbox\">\r\n                    Locations\r\n                  </InputLabel>\r\n                  <Select\r\n                    multiple\r\n                    value={state.city}\r\n                    onChange={handleChange(\"city\")}\r\n                    input={<Input id=\"select-multiple-chip\" />}\r\n                    renderValue={selected => (\r\n                      <div className={classes.chips}>\r\n                        {selected.map(value => (\r\n                          <Chip\r\n                            key={value}\r\n                            label={value}\r\n                            className={classes.chip}\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                    MenuProps={MenuProps}\r\n                    fullWidth\r\n                  >\r\n                    {cities.map(c => (\r\n                      <MenuItem key={c} value={c}>\r\n                        <Checkbox checked={state.city.indexOf(c) > -1} />\r\n                        <ListItemText primary={c} />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} align=\"right\" onClick={submitHandler}>\r\n                <Button className={classes.button} size=\"large\" variant=\"contained\" color=\"primary\">\r\n                  Submit\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Paper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React,{ useEffect } from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport axios from '../../../axios';\r\nimport Button from '@material-ui/core/Button'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Switch from '@material-ui/core/Switch'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n// import moment from \"moment\";\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        padding: theme.spacing(2),\r\n        boxSizing: 'border-box',\r\n        width: '68vw',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor:\"rgb(70,70,120)\",\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n        margin: 2,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(0),\r\n        minWidth: '100%',\r\n        maxWidth: '100vw',\r\n    },\r\n    divider: {\r\n        margin: theme.spacing(2, 0),\r\n    },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const { className, message, onClose, variant, ...other } = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n                    <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n                    {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon} />\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.string,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\r\n};\r\n\r\nexport default function AddVisited() {\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const [skills, setSkills] = React.useState([]);\r\n    const [cities, setCities] = React.useState([]);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [state, setState] = React.useState({\r\n        name: '',\r\n        cpname: '',\r\n        cpemail1: '',\r\n        cpemail2: '',\r\n        contactno1: '',\r\n        contactno2: '',\r\n        contactno3: '',\r\n        criteria: '',\r\n        passive_backlogs: '',\r\n        active_backlogs: '',\r\n        package_lpa: '',\r\n        start_date: new Date(),\r\n        final_date: new Date(),\r\n        no_of_students: '',\r\n        skills: [],\r\n        locality: [],\r\n        computer: '',\r\n        it: '',\r\n        entc: ''\r\n    })\r\n\r\n    const [snackState, setSnackState] = React.useState(false);\r\n\r\n    const [message,setMessage] = React.useState(\"Company Profile edited successfully!\");\r\n    const [variant,setVariant] = React.useState(\"success\");\r\n\r\n    useEffect(() => {\r\n        axios.get('/findallskills')\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setSkills([...response.data]);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        axios.get('/findalllocation')\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setCities([...response.data]);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }, []);\r\n\r\n    const [formErrors, setError] = React.useState({\r\n        cpname: '',\r\n        cpemail1: '',\r\n        cpemail2: '',\r\n        contactno1: '',\r\n        contactno2: '',\r\n        contactno3: '',\r\n        criteria: '',\r\n        package_lpa: '',\r\n        no_of_students: '',\r\n    })\r\n\r\n    const submitHandler = (event) => {\r\n\r\n        event.preventDefault();\r\n        var name = state.name;\r\n        axios.post('/industry/findByName', null, { params: { cname: state.name } })\r\n            .then((response) => {\r\n                if (response.data != \"\") {\r\n                    console.log(response.data)\r\n                       setState({\r\n                           ...response.data,\r\n                       });\r\n                       setMessage(\"Company profile found!\");\r\n                       setVariant(\"success\");\r\n                       setOpen(true);\r\n                }\r\n                else{\r\n                    setMessage(\"No such company profile found!\");\r\n                    setVariant(\"error\");\r\n                    setOpen(true);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n    const submitHandler2 = (event) => {\r\n        event.preventDefault();\r\n        console.log(state);\r\n        axios.post('/industry/add', state)\r\n            .then((response) => {\r\n                setMessage(\"Company Profile edited successfully!\")\r\n                setOpen(true);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setState({\r\n            ...state,\r\n            [name]: event.target.value\r\n        })\r\n        const value = event.target.value;\r\n        let error = '';\r\n        let reg = '';\r\n        switch (name) {\r\n\r\n            case 'cpname':\r\n                reg = /^[A-Za-z\\s]{1,}[\\.]{0,1}[A-Za-z\\s]{0,}$/\r\n                error = reg.test(value) ? '' : 'Invalid cpname';\r\n                break;\r\n            case 'cpemail1':\r\n            case 'cpemail2':\r\n                reg = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\r\n                error = reg.test(value) ? '' : 'Invalid Email';\r\n                break;\r\n            case 'contactno1':\r\n            case 'contactno2':\r\n            case 'contactno3':\r\n                reg = /^\\d{10}$/\r\n                error = reg.test(value) ? '' : 'Invalid Phone Number';\r\n                break;\r\n            case 'criteria':\r\n                error = (Number(value) > 0 && Number(value) < 10) ? '' : 'Invalid Criteria';\r\n                break;\r\n            case 'package_lpa':\r\n                reg = /^[0-9]+$/\r\n                error = reg.test(value) ? '' : 'Invalid package_lpa';\r\n                break;\r\n            case 'no_of_students':\r\n                error = Number(value) > 0 ? '' : 'Invalid Number Of Students';\r\n                break;\r\n        }\r\n        setError({\r\n            ...formErrors,\r\n            [name]: error,\r\n        })\r\n    }\r\n\r\n    const handleChecked = (name) => (event) => {\r\n        console.log(event.target.checked);\r\n        setState({\r\n            ...state,\r\n            [name]: event.target.checked,\r\n        })\r\n    }\r\n\r\n    const handleDateChange = (date, name) => {\r\n        setState({\r\n            ...state,\r\n            [name]: date,\r\n        })\r\n    }\r\n\r\n    const toggleBacklogs = (name) => (event) => {\r\n        setState({\r\n            ...state,\r\n            [name]: event.target.checked,\r\n        })\r\n    }\r\n    \r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n             <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n            >\r\n                <MySnackbarContentWrapper\r\n                    onClose={handleClose}\r\n                    variant={variant}\r\n                    message={message}\r\n                />\r\n            </Snackbar>\r\n            <Paper className={classes.paper}>\r\n                <Typography variant=\"h6\" gutterBottom align=\"center\">\r\n                    Edit company details\r\n                </Typography>\r\n                <form className={classes.container} noValidate autoComplete=\"off\">\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                label=\"company Name\"\r\n                                fullWidth\r\n                                onChange={handleChange('name')}\r\n                                value={state.name}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} align=\"right\">\r\n                            <Button size=\"large\" variant=\"contained\" color=\"primary\" className={classes.button} onClick={submitHandler}>find company</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n\r\n\r\n            <form className={classes.container} noValidate autoComplete=\"off\">\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={12}>\r\n                        <TextField\r\n                            label=\"Company Name\"\r\n                            fullWidth\r\n                            onChange={handleChange('name')}\r\n                            value={state.name}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <TextField\r\n                            label=\"Contact Person Name\"\r\n                            fullWidth\r\n                            onChange={handleChange('cpname')}\r\n                            value={state.cpname}\r\n                            error={formErrors.cpname.length > 0}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <TextField\r\n                            label=\" Email id 1\"\r\n                            fullWidth\r\n                            onChange={handleChange('cpemail1')}\r\n                            value={state.cpemail1}\r\n                            error={formErrors.cpemail1.length > 0}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <TextField\r\n                            label=\" Email id 2\"\r\n                            fullWidth\r\n                            onChange={handleChange('cpemail2')}\r\n                            value={state.cpemail2}\r\n                            error={formErrors.cpemail2.length > 0}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <TextField\r\n                            label=\"Contact Number 1\"\r\n                            fullWidth\r\n                            onChange={handleChange('contactno1')}\r\n                            value={state.contactno1}\r\n                            error={formErrors.contactno1.length > 0}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <TextField\r\n                            label=\"Contact Number 2\"\r\n                            fullWidth\r\n                            onChange={handleChange('contactno2')}\r\n                            value={state.contactno2}\r\n                            error={formErrors.contactno2.length > 0}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <TextField\r\n                            label=\"Contact Number 3\"\r\n                            fullWidth\r\n                            onChange={handleChange('contactno3')}\r\n                            value={state.contactno3}\r\n                            error={formErrors.contactno3.length > 0}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            label=\"Criteria\"\r\n                            fullWidth\r\n                            onChange={handleChange('criteria')}\r\n                            value={state.criteria}\r\n                            error={formErrors.criteria.length > 0}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            label=\"Package\"\r\n                            fullWidth\r\n                            onChange={handleChange('package_lpa')}\r\n                            value={state.package_lpa}\r\n                            error={formErrors.package_lpa.length > 0}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <TextField\r\n                            label=\"Number of Students\"\r\n                            fullWidth\r\n                            onChange={handleChange('no_of_students')}\r\n                            value={state.no_of_students}\r\n                            error={formErrors.no_of_students.length > 0}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4} >\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Switch\r\n                                    checked={state.passive_backlogs}\r\n                                    onChange={toggleBacklogs('passive_backlogs')}\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            style={{ boxSizing: 'border-box', marginLeft: '50px', marginTop: '20px' }}\r\n                            label=\"Passive Backlogs\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Switch\r\n                                    checked={state.active_backlogs}\r\n                                    onChange={toggleBacklogs('active_backlogs')}\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            style={{ boxSizing: 'border-box', marginTop: '20px' }}\r\n                            label=\"Active Backlogs\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={2}>\r\n                        <Chip label=\"Branches Preferred\" style={{ marginTop: \"6px\", boxSizing: 'border-box', marginLeft: '20px' }} />\r\n                    </Grid>\r\n                    <Grid item xs={2} align='left'>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox checked={state.computer} onChange={handleChecked('computer')} value=\"computer\" />\r\n                            }\r\n                            label=\"Computer\"\r\n                            style={{ boxSizing: 'border-box', marginLeft: '30px' }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox checked={state.it} onChange={handleChecked('it')} value=\"it\" />\r\n                            }\r\n                            label=\"Information Technology\"\r\n                            style={{ boxSizing: 'border-box', marginLeft: '45px' }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox checked={state.entc} onChange={handleChecked('entc')} value=\"entc\" />\r\n                            }\r\n                            label=\"Electronics and Telecommunication\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker\r\n                                fullWidth\r\n                                label=\"Preferred Date\"\r\n                                fullWidth\r\n                                value={state.start_date}\r\n                                onChange={(date) => handleDateChange(date, 'start_date')}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                        </MuiPickersUtilsProvider><br />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker\r\n                                fullWidth\r\n                                label=\"Final date\"\r\n                                fullWidth\r\n                                value={state.final_date}\r\n                                onChange={(date) => handleDateChange(date, 'final_date')}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                        </MuiPickersUtilsProvider><br />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel htmlFor=\"select-multiple-checkbox\">Skills Required</InputLabel>\r\n                            <Select\r\n                                multiple\r\n                                value={state.skills}\r\n                                onChange={handleChange('skills')}\r\n                                input={<Input id=\"select-multiple-chip\" />}\r\n                                renderValue={selected => (\r\n                                    <div className={classes.chips}>\r\n                                        {selected.map(value => (\r\n                                            <Chip key={value} label={value} className={classes.chip} />\r\n                                        ))}\r\n                                    </div>\r\n                                )}\r\n                                MenuProps={MenuProps}\r\n                                fullWidth\r\n                            >\r\n                                {skills.map(s => (\r\n                                    <MenuItem key={s} value={s}>\r\n                                        <Checkbox checked={state.skills.indexOf(s) > -1} />\r\n                                        <ListItemText primary={s} />\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <FormControl className={classes.formControl}>\r\n                                <InputLabel htmlFor=\"select-multiple-checkbox\">Locations</InputLabel>\r\n                                <Select\r\n                                    multiple\r\n                                    value={state.locality}\r\n                                    onChange={handleChange('locality')}\r\n                                    input={<Input id=\"select-multiple-chip\" />}\r\n                                    renderValue={selected => (\r\n                                        <div className={classes.chips}>\r\n                                            {selected.map(value => (\r\n                                                <Chip key={value} label={value} className={classes.chip} />\r\n                                            ))}\r\n                                        </div>\r\n                                    )}\r\n                                    MenuProps={MenuProps}\r\n                                    fullWidth\r\n                                >\r\n                                    {cities.map(c => (\r\n                                        <MenuItem key={c} value={c}>\r\n                                            <Checkbox checked={state.locality.indexOf(c) > -1} />\r\n                                            <ListItemText primary={c} />\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} align=\"right\" onClick={submitHandler2}>\r\n                        <Button size=\"large\" variant=\"contained\" color=\"primary\">Submit</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n\r\n\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n\r\nconst styles = makeStyles(theme => ({\r\n    root: {\r\n        width: \"85%\",\r\n        marginTop: theme.spacing(3),\r\n        overflowX: \"auto\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        margin: \"auto\"\r\n    },\r\n\r\n    blah: {\r\n        backgroundColor: \"#b90000\",\r\n        borderRadius: \"5px\",\r\n\r\n        \"&:hover\": {\r\n            backgroundColor: \"#772e2e\",\r\n        },\r\n\r\n        \"&:active\": {\r\n            backgroundColor: \"#772e2e\",\r\n        }\r\n    }\r\n}))\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate, paginatePrev }) => {\r\n\r\n    const pageNumbers = [];\r\n\r\n    const [currentPage, setCurrentPage] = React.useState(1);\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n   //if(pageNumbers.length===1) return null;\r\n    const classes = styles();\r\n\r\n    const clickHandler = (number) => {\r\n        setCurrentPage(number);\r\n        paginate(number);\r\n    }\r\n\r\n    return (\r\n        <nav className={classes.root} aria-label=\"Page navigation example\">\r\n            <ul class=\"pagination justify-content-end\">\r\n                {pageNumbers.map(number => (\r\n                    <li className={currentPage===number?'page-item active':'page-item'}>\r\n                        <a class=\"page-link\" onClick={() => { clickHandler(number) }}>\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Pagination;","import React, { Component } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"../../axios\";\r\nimport { ButtonGroup } from \"@material-ui/core\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport ReactToPrint from 'react-to-print';\r\nimport Pagination from '../../components/Pagination'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst styles = theme => ({\r\n  palette: {\r\n    type: \"dark\"\r\n  },\r\n  root: {\r\n    width: \"85%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    margin: \"auto\"\r\n  },\r\n  root2: {\r\n    width: \"85%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\",\r\n    margin: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n  text: {\r\n    textAlign: \"center\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(3)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    margin: \"auto\",\r\n    backgroundColor:\"rgb(70,70,120)\",\r\n    outline: \"none\"\r\n  },\r\n  group: {\r\n    margin: theme.spacing(1, 0)\r\n  }\r\n});\r\n\r\nclass BranchReport extends Component {\r\n  state = {\r\n    computer: false,\r\n    it: false,\r\n    entc: false,\r\n    students: [],\r\n    postsPerPage: 3,\r\n    currentPage: 1,\r\n    show: [],\r\n  };\r\n\r\n  handleChange = name => event => {\r\n    this.setState({\r\n      ...this.state,\r\n      [name]: event.target.checked\r\n    });\r\n    setTimeout(()=>{ this.clickHandler() }, 30);\r\n    \r\n  };\r\n\r\n  pageStand = (pageNumber) => {\r\n    const indexOfLastPost = pageNumber * this.state.postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - this.state.postsPerPage;\r\n    const currentPosts = this.state.students.slice(indexOfFirstPost, indexOfLastPost);\r\n    this.setState({\r\n      ...this.state,\r\n      show: [...currentPosts],\r\n    })\r\n  }\r\n\r\n  paginate = (pageNumber) => {\r\n    this.setState({\r\n      ...this.state,\r\n      currentPage: pageNumber,\r\n    })\r\n    this.pageStand(pageNumber);\r\n  }\r\n\r\n  clickHandler = () => {\r\n    var pass = {\r\n      computer: this.state.computer,\r\n      it: this.state.it,\r\n      entc: this.state.entc,\r\n    }\r\n    console.log(pass)\r\n    axios.post(\"/sortbybranch\", pass)\r\n      .then((response) => {\r\n        this.setState({\r\n          ...this.state,\r\n          students: response.data,\r\n        })\r\n        this.pageStand(this.state.currentPage);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <Paper className={classes.root}>\r\n          <FormControl component=\"fieldset\" className={classes.formControl}>\r\n            <FormLabel component=\"legend\" className={classes.text}>\r\n              Select the branch\r\n            </FormLabel>\r\n            <FormGroup row>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={this.state.computer}\r\n                    onChange={this.handleChange('computer')}\r\n                    value=\"computer\"\r\n                  />\r\n                }\r\n                label=\"Computer\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    style={{ marginLeft: \"5vw\" }}\r\n                    checked={this.state.it}\r\n                    onChange={this.handleChange('it')}\r\n                    value=\"it\"\r\n                  />\r\n                }\r\n                label=\"IT\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    style={{ marginLeft: \"5vw\" }}\r\n                    checked={this.state.entc}\r\n                    onChange={this.handleChange('entc')}\r\n                    value=\"entc\"\r\n                  />\r\n                }\r\n                label=\"ENTC\"\r\n              />\r\n            </FormGroup>\r\n            <ButtonGroup>\r\n            \r\n              <ReactToPrint\r\n                trigger={() => <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  id=\"printbtn\"\r\n                  className={classes.button}\r\n                >\r\n                  Print\r\n                </Button>}\r\n                content={() => this.componentRef}\r\n              />\r\n            </ButtonGroup>\r\n          </FormControl>\r\n        </Paper>\r\n        <br></br>\r\n        <br></br>\r\n        <div id=\"blah2\">\r\n          <div>\r\n            <Paper className={classes.root}>\r\n              <table className=\"table table-bordered table-striped\" id=\"printArea\">\r\n                <thead >\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th align=\"right\">Name</th>\r\n                    <th align=\"right\">Roll Number</th>\r\n                    <th align=\"right\">SGPA</th>\r\n                    <th align=\"right\">Branch</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.show.map(s => (\r\n                    <tr key={s.student.rollno}>\r\n                      <td component=\"th\" scope=\"row\">\r\n                        {s.student.rollno}\r\n                      </td>\r\n                      <td>{s.student.firstName}</td>\r\n                      <td>{s.student.rollno}</td>\r\n                      <td>{s.sgpaAggregate}</td>\r\n                      <td>{s.branch}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </Paper>\r\n            <div style={{display:\"none\"}}>\r\n              <Paper ref={el => (this.componentRef = el)} className={classes.root2}>\r\n                <br></br>\r\n                <Typography component=\"h2\" variant=\"h4\" align=\"center\">\r\n                  Branch Report\r\n                </Typography><br></br>\r\n                <Typography component=\"h2\" variant=\"h6\" align=\"center\">\r\n                  <ul style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                    {this.state.computer ? <li style={{ listStyleType: \"disc\", margin: \"auto\" }}>Computer</li> : ''}\r\n                    {this.state.it ? <li style={{ listStyleType: \"disc\", margin: \"auto\" }}>IT</li> : ''}\r\n                    {this.state.entc ? <li style={{ listStyleType: \"disc\", margin: \"auto\" }}>ENTC</li> : ''}\r\n                  </ul>\r\n                </Typography><br></br>\r\n                <table className=\"table table-bordered table-striped\" id=\"printArea\">\r\n                  <thead >\r\n                    <tr>\r\n                      <th>ID</th>\r\n                      <th align=\"right\">Name</th>\r\n                      <th align=\"right\">Roll Number</th>\r\n                      <th align=\"right\">SGPA</th>\r\n                      <th align=\"right\">Branch</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {this.state.students.map(s => (\r\n                      <tr key={s.student.rollno}>\r\n                        <td component=\"th\" scope=\"row\">\r\n                          {s.student.rollno}\r\n                        </td>\r\n                        <td>{s.student.firstName}</td>\r\n                        <td>{s.student.rollno}</td>\r\n                        <td>{s.sgpaAggregate}</td>\r\n                        <td>{s.branch}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </Paper>\r\n            </div>\r\n\r\n            <Pagination\r\n              postsPerPage={this.state.postsPerPage}\r\n              totalPosts={this.state.students.length}\r\n              paginate={this.paginate}\r\n              paginatePrev={this.paginatePrev} />\r\n          </div>\r\n        </div>\r\n      </React.Fragment >\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(BranchReport);","import React from 'react'\r\nimport axios from '../../../axios'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ReactToPrint from 'react-to-print'\r\n\r\nconst styles = (theme => ({\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    layout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    paper: {\r\n        // marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        padding: theme.spacing(2),\r\n        boxSizing: 'border-box',\r\n        width: '75vw',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n    },\r\n    printButton: {\r\n        // marginTop: '2vh'\r\n    }\r\n}));\r\n\r\nclass CompanyDetails extends React.Component {\r\n\r\n    state = {\r\n        company: {},\r\n        skills: 'Null',\r\n        locality: '',\r\n        branchesPreffered: [],\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.post('/industry/findById', null, { params: { id: this.props.match.params.id } })\r\n        .then((response) => {\r\n            this.setState({\r\n                ...this.state,\r\n                company: response.data,\r\n            })\r\n            let bp = [\r\n                [\"Computer\",this.state.company.computer],\r\n                [\"IT\",this.state.company.it],\r\n                [\"ENTC\",this.state.company.entc],\r\n            ]\r\n            let l = bp.filter((val) => {\r\n                return val[1]\r\n            })\r\n            this.setState({\r\n                ...this.state,\r\n                branchesPreffered: l.map((item) => item[0])\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(this.state.company);\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Paper className={classes.paper}>\r\n                <ReactToPrint\r\n                    trigger={() => <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        id=\"printbtn\"\r\n                        className={classes.printButton}>\r\n                        Print\r\n                </Button>}\r\n                    content={() => this.componentRef}\r\n                />\r\n                <br></br>\r\n                <br></br>\r\n                <div ref={el => (this.componentRef = el)} style={{marginLeft:\"3vw\"}}>\r\n                <br></br>\r\n                    <Typography variant=\"h4\">\r\n                        Company Details: {this.state.company.name}\r\n                    </Typography>\r\n                    <br></br>\r\n                    <table class=\"table table-sm table-bordered table-striped\" style={{ width: \"70%\" }}>\r\n                    <thead>\r\n                        <th scope=\"col\" style={{width:\"30%\"}}></th>\r\n                        <th scope=\"col\"></th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th scope=\"row\">Name</th>\r\n                            <td>{this.state.company.name}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Start Date</th>\r\n                            <td>{this.state.company.start_date}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Final Date</th>\r\n                            <td>{this.state.company.final_date}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Email 1</th>\r\n                            <td>{this.state.company.cpemail1}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Email 2</th>\r\n                            <td>{this.state.company.cpemail2}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Email 2</th>\r\n                            <td>{this.state.company.cpemail2}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Contact Number 1</th>\r\n                            <td>{this.state.company.contactno1}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Contact Number 2</th>\r\n                            <td>{this.state.company.contactno2}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Contact Number 3</th>\r\n                            <td> {this.state.company.contactno3}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Contact Number 3</th>\r\n                            <td> {this.state.company.contactno3}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Active Backlogs</th>\r\n                            <td> {this.state.company.active_backlogs?\"Allowed\":\"Not Allowed\"}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Passive Backlogs</th>\r\n                            <td>{this.state.company.passive_backlogs?\"Allowed\":\"Not Allowed\"}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Branches Preffered</th>\r\n                            <td>{Array(this.state.branchesPreffered).length>0?Array(this.state.branchesPreffered).join():'Null'}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Criteria</th>\r\n                            <td>{String(this.state.company.criteria)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Number of students</th>\r\n                            <td>{String(this.state.company.no_of_students)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Package LPA</th>\r\n                            <td>{String(this.state.company.package_lpa)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Skills required</th>\r\n                            <td>{Array(this.state.company.skills).length>0?Array(this.state.company.skills).join():'Null'}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Locations</th>\r\n                            <td>{Array(this.state.company.locality).length>0?Array(this.state.company.locality).join():'Null'}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(CompanyDetails);","import React, { Component } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport axios from \"../../../axios\";\r\nimport CompanyDetails from \"./CompanyDetails\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { amber, green } from \"@material-ui/core/colors\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nimport {\r\n   MuiPickersUtilsProvider,\r\n   KeyboardDatePicker\r\n} from \"@material-ui/pickers\";\r\n\r\nconst styles = theme => ({\r\n   icon: {\r\n      fontSize: 20\r\n   },\r\n   success: {\r\n      backgroundColor: green[600]\r\n   },\r\n   iconVariant: {\r\n      opacity: 0.9,\r\n      marginRight: \"20dp\"\r\n   },\r\n   message: {\r\n      display: \"flex\",\r\n      alignItems: \"center\"\r\n   },\r\n\r\n   palette: {\r\n      type: \"dark\"\r\n   },\r\n   root: {\r\n      width: \"85%\",\r\n      // marginTop: theme.spacing(3),\r\n      overflowX: \"auto\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      margin: \"auto\"\r\n   },\r\n   table: {\r\n      minWidth: 650\r\n   },\r\n   button: {\r\n      margin: \"auto\",\r\n      backgroundColor: \"rgb(70,70,120)\",\r\n      outline: \"none\"\r\n   },\r\n   printButton: {\r\n      margin: \"auto\",\r\n      marginLeft: \"47%\",\r\n      marginBottom: \"2%\",\r\n      backgroundColor: \"rgb(70,70,120)\",\r\n   },\r\n   button2: {\r\n      margin: \"auto\",\r\n      backgroundColor: \"#388E3C\",\r\n      outline: \"none\"\r\n   },\r\n   tableText: {},\r\n   classGrid: {\r\n      boxSizing: \"border-box\",\r\n      margin: \"20px\"\r\n   },\r\n   tableRow: {\r\n      opacity: \"1\",\r\n      transition: \"opacity 300ms ease\",\r\n      cursor: \"pointer\"\r\n   }\r\n});\r\nconst variantIcon = {\r\n   success: CheckCircleIcon,\r\n   warning: WarningIcon,\r\n   error: ErrorIcon,\r\n   info: InfoIcon\r\n};\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n   PaperProps: {\r\n      style: {\r\n         maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n         width: 250\r\n      }\r\n   }\r\n};\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n   const classes = styles();\r\n   const { className, message, onClose, variant, ...other } = props;\r\n   const Icon = variantIcon[variant];\r\n\r\n   return (\r\n      <SnackbarContent\r\n         className={clsx(classes[variant], className)}\r\n         aria-describedby=\"client-snackbar\"\r\n         message={\r\n            <span id=\"client-snackbar\" className={classes.message}>\r\n               <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n               {message}\r\n            </span>\r\n         }\r\n         action={[\r\n            <IconButton\r\n               key=\"close\"\r\n               aria-label=\"close\"\r\n               color=\"inherit\"\r\n               onClick={onClose}\r\n            >\r\n               <CloseIcon className={classes.icon} />\r\n            </IconButton>\r\n         ]}\r\n         {...other}\r\n      />\r\n   );\r\n}\r\nMySnackbarContentWrapper.propTypes = {\r\n   className: PropTypes.string,\r\n   message: PropTypes.string,\r\n   onClose: PropTypes.func,\r\n   variant: PropTypes.oneOf([\"error\", \"info\", \"success\", \"warning\"]).isRequired\r\n};\r\n\r\nclass AllCompanies extends Component {\r\n   constructor() {\r\n      super();\r\n      axios\r\n         .get(\"/industry/findall\")\r\n         .then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n               ...this.state,\r\n               companies: response.data\r\n            });\r\n         })\r\n         .catch(error => {\r\n            console.log(error);\r\n         });\r\n   }\r\n\r\n   state = {\r\n      name: \"\",\r\n      cpName: \"\",\r\n      cpEmail1: \"\",\r\n      cpEmail2: \"\",\r\n      contactNo1: \"\",\r\n      contactNo2: \"\",\r\n      contactNo3: \"\",\r\n      criteria: \"\",\r\n      passiveBacklogs: false,\r\n      activeBacklogs: false,\r\n      package: \"\",\r\n      startDate: new Date(),\r\n      finalDate: new Date(),\r\n      numberOfStudents: \"\",\r\n      skill: [],\r\n      city: [],\r\n      branches: {\r\n         computer: false,\r\n         it: false,\r\n         entc: false\r\n      },\r\n      companies: [],\r\n      open: false\r\n   };\r\n\r\n   handleClose = (event, reason) => {\r\n      if (reason === \"clickaway\") {\r\n         return;\r\n      }\r\n\r\n      this.setState({\r\n         ...this.state,\r\n         open: false\r\n      });\r\n   };\r\n\r\n   dateChangeHandler = (date, name) => {\r\n      this.setState({\r\n         ...this.state,\r\n         [name]: date\r\n      });\r\n   };\r\n\r\n   dateChangeHandlerPersonal = (date, index) => {\r\n      var newCompanies = [...this.state.companies];\r\n      console.log(newCompanies);\r\n      var company = newCompanies[index];\r\n      company.temp_final_date = date;\r\n      console.log(company);\r\n      newCompanies[index] = company;\r\n      console.log(newCompanies);\r\n      this.setState({\r\n         ...this.state,\r\n         companies: newCompanies\r\n      });\r\n   };\r\n\r\n   companyHandler = company => {\r\n      console.log(\"clicked\" + company.name);\r\n      window.open(\r\n         \"http://localhost:3000/admin/company-details/\" + company.id,\r\n         \"_blank\"\r\n      );\r\n   };\r\n\r\n   submitHandler = () => {\r\n      console.log(this.state.startDate);\r\n      console.log(this.state.finalDate);\r\n\r\n      let state = this.state;\r\n\r\n      var industry = {\r\n         name: state.name,\r\n         cpname: state.cpName,\r\n         cpemail1: state.cpEmail1,\r\n         cpemail2: state.cpEmail2,\r\n         contactno1: state.contactNo1,\r\n         contactno2: state.contactNo2,\r\n         contactno3: state.contactNo3,\r\n         criteria: state.criteria,\r\n         passive_backlogs: state.passiveBacklogs,\r\n         active_backlogs: state.activeBacklogs,\r\n         package_lpa: state.package,\r\n         start_date: state.startDate,\r\n         final_date: state.finalDate,\r\n         no_of_students: state.numberOfStudents,\r\n         skills: state.skill,\r\n         locality: state.city,\r\n         branches: state.branches\r\n      };\r\n\r\n      axios\r\n         .post(\"/industry/findByDate\", industry)\r\n         .then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n               companies: response.data\r\n            });\r\n         })\r\n         .catch(error => {\r\n            console.log(error);\r\n         });\r\n   };\r\n\r\n   submitHandler3 = industry => {\r\n      console.log(industry);\r\n      industry.final_date = industry.temp_final_date;\r\n      industry = {\r\n         ...industry,\r\n         start_date: industry.final_date\r\n      };\r\n      console.log(industry);\r\n      axios\r\n         .post(\"/industry/add\", industry)\r\n         .then(response => {\r\n            this.setState({\r\n               ...this.state,\r\n               open: true\r\n            });\r\n            this.setState(response.data);\r\n         })\r\n         .catch(error => {\r\n            console.log(error);\r\n         });\r\n   };\r\n\r\n   submitHandler2 = company => {\r\n      var final = this.state.finalDate;\r\n      let state = this.state;\r\n      console.log(final);\r\n      axios\r\n         .post(\"/industry/findById\", null, { params: { id: company.id } })\r\n         .then(response => {\r\n            this.setState(response.data);\r\n            console.log(this.state);\r\n            this.state.finalDate = final;\r\n            this.state.final_date = this.state.finalDate;\r\n            this.submitHandler3(this.state);\r\n         })\r\n         .catch(error => {\r\n            console.log(error);\r\n         });\r\n   };\r\n\r\n   render() {\r\n      const { classes } = this.props;\r\n      var da = [];\r\n      const getDates = () => {\r\n         axios\r\n            .get(\"/industry/getDateList\", null)\r\n            .then(response => {\r\n               da = response.data;\r\n            })\r\n            .catch(error => {\r\n               console.log(error);\r\n            });\r\n      };\r\n      getDates();\r\n\r\n      const retrieve = date => {\r\n         var sa = [];\r\n\r\n         var st = [];\r\n         var n = [];\r\n         var m = [];\r\n         var y = [];\r\n         var k = [];\r\n         let i = [];\r\n         for (i = 0; i < da.length; i++) {\r\n            st[i] = new Date(da[i]);\r\n         }\r\n\r\n         for (i = 0; i < st.length; i++) {\r\n            n[i] = st[i].getDate();\r\n            m[i] = st[i].getMonth();\r\n            y[i] = st[i].getFullYear();\r\n         }\r\n\r\n         for (let j = 0; j < st.length; j++)\r\n            k[j] =\r\n               n[j] === date.getDate() &&\r\n               m[j] === date.getMonth() &&\r\n               y[j] === date.getFullYear();\r\n\r\n         for (i = 0; i < st.length; i++) {\r\n            if (k[i]) {\r\n               return k[i];\r\n            }\r\n         }\r\n      };\r\n      return (\r\n         <React.Fragment>\r\n\r\n            <Snackbar\r\n               anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"left\"\r\n               }}\r\n               open={this.state.open}\r\n               autoHideDuration={6000}\r\n               onClose={this.handleClose}\r\n            >\r\n               <MySnackbarContentWrapper\r\n                  onClose={this.handleClose}\r\n                  variant=\"success\"\r\n                  message=\"Date Alloted!\"\r\n               />\r\n            </Snackbar>\r\n            <Button\r\n               variant=\"contained\"\r\n               color=\"primary\"\r\n               id=\"printbtn\"\r\n               className={classes.printButton}\r\n            >\r\n               Print\r\n        </Button>\r\n            <Paper className={classes.root} id=\"paper1\">\r\n               <Grid container className={classes.classGrid}>\r\n                  <Grid item xs={4}>\r\n                     <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                           margin=\"normal\"\r\n                           label=\"From: \"\r\n                           value={this.state.startDate}\r\n                           onChange={date => this.dateChangeHandler(date, \"startDate\")}\r\n                           KeyboardButtonProps={{\r\n                              \"aria-label\": \"change date\"\r\n                           }}\r\n                        />\r\n                     </MuiPickersUtilsProvider>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                     <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                           margin=\"normal\"\r\n                           label=\"To: \"\r\n                           value={this.state.finalDate}\r\n                           onChange={date => this.dateChangeHandler(date, \"finalDate\")}\r\n                           KeyboardButtonProps={{\r\n                              \"aria-label\": \"change date\"\r\n                           }}\r\n                        />\r\n                     </MuiPickersUtilsProvider>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                     <Button\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.submitHandler}\r\n                     >\r\n                        Submit\r\n              </Button>\r\n                  </Grid>\r\n               </Grid>\r\n            </Paper>\r\n            <Paper className={classes.root}>\r\n               <table className=\"table table-bordered\">\r\n                  <thead>\r\n                     <tr style={{ height: \"8vh\" }}>\r\n                        <th className={classes.tableText}>\r\n                           Company Name\r\n                </th>\r\n                        <th className={classes.tableText} align=\"right\">\r\n                           Preffered Date\r\n                </th>\r\n                        <th className={classes.tableText} align=\"center\">\r\n                           Choose final date\r\n                </th>\r\n                        <th className={classes.tableText} align=\"left\">\r\n                           Accept\r\n                </th>\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                     {this.state.companies.map((company, index) => (\r\n                        <tr key={company.id} className={classes.tr}>\r\n                           <td\r\n                              style={{ color: \"#3f51b5\", cursor: \"pointer\" }}\r\n                              component=\"th\"\r\n                              scope=\"row\"\r\n                              onClick={() => this.companyHandler(company)}\r\n                           >\r\n                              <u>{company.name}</u>\r\n                           </td>\r\n                           <td>{company.start_date}</td>\r\n                           <td id=\"btncol\">\r\n                              {\" \"}\r\n                              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                 <KeyboardDatePicker\r\n                                    label=\"Final Date\"\r\n                                    value={company.final_date == null ? company.start_date : company.final_date}\r\n                                    onChange={date =>\r\n                                       this.dateChangeHandlerPersonal(date, index)\r\n                                    }\r\n                                    KeyboardButtonProps={{\r\n                                       \"aria-label\": \"change date\"\r\n                                    }}\r\n                                    shouldDisableDate={retrieve}\r\n                                 />\r\n                              </MuiPickersUtilsProvider>\r\n                           </td>\r\n                           <td>\r\n                              <Button\r\n                                 className={company.final_date == null ? classes.button : classes.button2}\r\n                                 variant=\"contained\"\r\n                                 color=\"primary\"\r\n                                 onClick={() => this.submitHandler3(company)}\r\n                              >\r\n                                 Allot\r\n                    </Button>\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n                  </tbody>\r\n               </table>\r\n            </Paper>\r\n         </React.Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nexport default withStyles(styles)(AllCompanies);","import React, { Component } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"../../axios\";\r\nimport { fontSize } from \"@material-ui/system\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport Pagination from '../../components/Pagination'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst styles = theme => ({\r\n  palette: {\r\n    type: \"dark\"\r\n  },\r\n  root: {\r\n    width: \"70%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\",\r\n    margin: \"auto\"\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    margin: \"auto\",\r\n    left: \"47%\",\r\n    backgroundColor: \"rgb(70,70,120)\",\r\n    outline: \"none\"\r\n  },\r\n  table: {\r\n    margin: \"auto\",\r\n    minWidth: 500\r\n  },\r\n  tableRow: {\r\n    opacity: \"1\",\r\n    transition: \"opacity 300ms ease\",\r\n    cursor: \"pointer\",\r\n    color: \"blue\"\r\n  }\r\n});\r\n\r\nclass CountReport extends Component {\r\n  state = {\r\n    companies: [],\r\n    postsPerPage: 10,\r\n    currentPage: 1,\r\n    show: [],\r\n  };\r\n\r\n  //////\r\n  pageStand = (pageNumber) => {\r\n    const indexOfLastPost = pageNumber * this.state.postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - this.state.postsPerPage;\r\n    const currentPosts = this.state.students.slice(indexOfFirstPost, indexOfLastPost);\r\n    this.setState({\r\n      ...this.state,\r\n      show: [...currentPosts],\r\n    })\r\n  }\r\n\r\n  paginate = (pageNumber) => {\r\n    this.setState({\r\n      ...this.state,\r\n      currentPage: pageNumber,\r\n    })\r\n    this.pageStand(pageNumber);\r\n  }\r\n  ///////\r\n\r\n\r\n  constructor() {\r\n    super();\r\n    axios\r\n      .get(\"/countofplaced\")\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({ companies: response.data });\r\n        //this.pageStand(this.state.currentPage);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <ReactToPrint\r\n          trigger={() => (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              id=\"printbtn\"\r\n              className={classes.button}\r\n              onClick={this.printDocument}\r\n            >\r\n              Print\r\n            </Button>\r\n          )}\r\n          content={() => this.componentRef}\r\n        />\r\n\r\n        {/* <div>\r\n          <Paper ref={el => (this.componentRef = el)} className={classes.root}>\r\n            <table className=\"table table-bordered table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Company Name</th>\r\n                  <th align=\"right\">Number of Students placed</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.companies.map(company => (\r\n                  <tr key={company.name}>\r\n                    <td component=\"th\" scope=\"row\">\r\n                      {company.name}\r\n                    </td>\r\n                    <td align=\"right\">{company.count}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </Paper>\r\n        </div> */}\r\n        <Paper className={classes.root}>\r\n          <table className=\"table table-bordered  table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th>Company Name</th>\r\n                <th align=\"right\">Number of Students placed</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.companies.map(company => (\r\n                <tr key={company.id}>\r\n                  <td component=\"th\" scope=\"row\">\r\n                    {company.name}\r\n                  </td>\r\n                  <td align=\"right\">{company.count}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </Paper>\r\n        <Pagination\r\n          postsPerPage={this.state.postsPerPage}\r\n          totalPosts={this.state.companies.length}\r\n          paginate={this.paginate}\r\n          paginatePrev={this.paginatePrev} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CountReport);\r\n","import React, { Component } from 'react'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport axios from '../../axios'\r\nimport { fontSize } from '@material-ui/system';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nconst styles = (theme => ({\r\n\r\n    palette: {\r\n        type: 'dark',\r\n    },\r\n    root: {\r\n        width: '70%',\r\n        marginTop: theme.spacing(3),\r\n        overflowX: 'auto',\r\n        margin: 'auto'\r\n    },\r\n    table: {\r\n        margin: 'auto',\r\n        minWidth: 500,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        margin: \"auto\",\r\n        left:\"47%\"\r\n      },\r\n    tr: {\r\n        opacity: '1',\r\n        transition: 'opacity 300ms ease',\r\n        cursor: 'pointer',\r\n        color: 'black'\r\n    }\r\n}));\r\n\r\n\r\nclass SkillsReport extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        axios.get('/industry/findall')\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                this.setState({\r\n                    companies: response.data,\r\n                })\r\n                \r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    state = {\r\n        companies: [],\r\n        skills: [],\r\n    }\r\n\r\n    printDocument = () => {\r\n        document.getElementById(\"printbtn\").style.visibility=\"hidden\";\r\n        window.print();\r\n        document.getElementById(\"printbtn\").style.visibility=\"visible\";\r\n      }\r\n\r\n    \r\n    companyHandler = (company) => {\r\n        console.log(\"clicked\" + company.name);\r\n        window.open(\"http://localhost:3000/admin/skill-report/\"+company.id, '_blank');\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(this.state.skills)\r\n        const { classes } = this.props;\r\n        return (\r\n        <div>\r\n            {/* <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            id=\"printbtn\"\r\n            className={classes.button}\r\n            onClick={this.printDocument}\r\n          >\r\n            Print\r\n          </Button> */}\r\n            <Paper className={classes.root}>\r\n                <table className=\"table table-bordered table-striped\">\r\n                    <thead>\r\n                        <tr >\r\n                            <th className={classes.tr}>Company Name</th>\r\n                            <th align=\"right\">Criteria</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.companies.map((company) => (\r\n                            <tr key={company.id}>\r\n                                <td style={{ color: \"#3f51b5\",cursor:\"pointer\" }} component=\"th\" scope=\"row\" className={classes.tr} onClick={()=>this.companyHandler(company)} >\r\n                                    <u>{company.name}</u>\r\n                                </td>\r\n                                <td align=\"right\">{company.criteria}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SkillsReport);","import React, { Component } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"../../axios\";\r\nimport ReactToPrint from 'react-to-print';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n    palette: {\r\n        type: \"dark\"\r\n    },\r\n    root: {\r\n        width: \"85%\",\r\n        marginTop: theme.spacing(1),\r\n        overflowX: \"auto\",\r\n        // display: \"flex\",\r\n        // justifyContent: \"center\",\r\n        // alignItems: \"center\",\r\n        margin: \"auto\"\r\n    },\r\n    table: {\r\n        minWidth: 650\r\n    },\r\n    text: {\r\n        textAlign: \"center\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        // margin: \"auto\",\r\n        left: \"47%\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(3)\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        margin: \"auto\"\r\n    },\r\n    group: {\r\n        margin: theme.spacing(1, 0)\r\n    }\r\n});\r\n\r\nclass StudentReport extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // axios.post(\"/industry/findById\", null, { params: { id: this.props.match.params.id } })\r\n        //     .then((response) => {\r\n        //         this.setState({\r\n        //             ...this.state,\r\n        //             company: response.data,\r\n        //         })\r\n        //     })\r\n        //     .catch((error) => {\r\n        //         console.log(error);\r\n        //     })\r\n        //     console.log(this.state.company);\r\n\r\n        axios.post(\"/sortbyskills\", null, { params: { id: this.props.match.params.id } })\r\n            .then(response => {\r\n                console.log(response.data);\r\n                this.setState({\r\n                    ...this.state,\r\n                    students: response.data\r\n                });\r\n                console.log(this.state.company);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    state = {\r\n        students: [],\r\n        company: {},\r\n        branch: 'computer'\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            ...this.state,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <div>\r\n                    <Paper className={classes.root}>\r\n\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h6\" gutterBottom style={{ marginTop: '5vh', marginLeft: 'auto', marginRight: 'auto', textAlign: 'center' }}>\r\n                                    <ReactToPrint\r\n                                        trigger={() => <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            id=\"printbtn\"\r\n                                            className={classes.button}\r\n                                        >\r\n                                            Print\r\n                                            </Button>}\r\n                                        content={() => this.componentRef}\r\n                                    />\r\n\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <br></br>\r\n                        <Grid container ref={el => (this.componentRef = el)}>\r\n                            <Typography variant=\"h6\" gutterBottom style={{ marginLeft: 'auto', marginRight: 'auto', textAlign: 'center' }}>\r\n                                Company Name: {this.state.company.name}\r\n                            </Typography>\r\n                            <Grid item xs={12}>\r\n                                <table className=\"table table-striped table-bordered\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>ID</th>\r\n                                            <th align=\"right\">Name</th>\r\n                                            <th align=\"right\">Roll Number</th>\r\n                                            <th align=\"right\">SGPA</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {this.state.students.map(s => (\r\n                                            <tr key={s.student.rollno}>\r\n                                                <td component=\"th\" scope=\"row\">\r\n                                                    {s.student.rollno}\r\n                                                </td>\r\n                                                <td align=\"right\">{s.student.firstName}</td>\r\n                                                <td align=\"right\">{s.student.rollno}</td>\r\n                                                <td align=\"right\">{s.sgpaAggregate}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </div>\r\n            </React.Fragment >\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(StudentReport);\r\n","import React, { Component } from 'react'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport axios from '../../axios'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport Chip from '@material-ui/core/Chip'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    paper: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        padding: theme.spacing(2),\r\n        boxSizing: 'border-box',\r\n        width: '68vw',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n    }\r\n}));\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const { className, message, onClose, variant, ...other } = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n                    <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n                    {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon} />\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.string,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\r\n};\r\n\r\nexport default function AddUser() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useState({\r\n        id: '',\r\n        pass: '',\r\n        type: '',\r\n    })\r\n\r\n    const [skill, setSkill] = React.useState('');\r\n    const [city, setCity] = React.useState('');\r\n\r\n    const types = {\r\n        'Admin': 'admin',\r\n        'Company': 'company',\r\n        'Student': 'student',\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [message,setMessage] = React.useState(\"User added successfully!\");\r\n    const [variant,setVariant] = React.useState(\"success\");\r\n\r\n\r\n    const changeHandler = (name) => (event) => {\r\n        setState({\r\n            ...state,\r\n            [name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    const changeSkill = () => (event) => {\r\n        setSkill(event.target.value);\r\n    }\r\n\r\n    const changeCity = () => (event) => {\r\n        setCity(event.target.value);\r\n    }\r\n\r\n    const submitHandler = () => {\r\n        const resetState = {\r\n        id: '',\r\n        pass: '',\r\n        type: '',\r\n        };\r\n        axios.post('/adduser', state)\r\n            .then((response) => {\r\n                console.log(response)\r\n                if(response.data=='TRUE'){\r\n                setMessage(\"User added successfully !\");\r\n                setVariant(\"success\");\r\n                setOpen(true);\r\n                }\r\n                else{\r\n                    setMessage(\"Invalid entry or user Id already exists !\");\r\n                    setVariant(\"error\");\r\n                    setOpen(true);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n            setState(resetState);\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const submitSkill = () => {\r\n        const pass = {\r\n            skills: skill.toUpperCase(),\r\n        }\r\n        axios.post(\"addskills/\", pass)\r\n            .then((response) => {\r\n               \r\n                console.log(response.data);\r\n                setOpen(true);\r\n                \r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n            setSkill('');\r\n    }\r\n    const submitCity = () => {\r\n        const pass = {\r\n            location: city.toUpperCase(),\r\n        }\r\n        axios.post(\"addlocation/\", pass)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setOpen(true);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n            setCity('');\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n            >\r\n                <MySnackbarContentWrapper\r\n                    onClose={handleClose}\r\n                    variant={variant}\r\n                    message={message}\r\n                />\r\n            </Snackbar>\r\n            <Paper className={classes.paper}>\r\n                <Typography variant=\"h6\" gutterBottom align=\"center\">\r\n                    ADD USER\r\n                </Typography>\r\n                <Grid container spacing={2} direction=\"column\">\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            label=\"User ID\"\r\n                            fullWidth\r\n                            value={state.id}\r\n                            onChange={changeHandler('id')}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            label=\"Password\"\r\n                            fullWidth\r\n                            value={state.pass}\r\n                            onChange={changeHandler('pass')}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            select\r\n                            label=\"Type\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            onChange={changeHandler('type')}\r\n                            value={state.type}\r\n                        >\r\n                            {Object.keys(types).map(option => (\r\n                                <MenuItem key={option} value={types[option]}>\r\n                                    {option}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </Grid>\r\n                    <Grid item xs={12} style={{ marginTop: \"3vh\" }}>\r\n                        <Button style={{backgroundColor: \"rgb(70,70,120)\",}} onClick={submitHandler} size=\"large\" variant=\"contained\" color=\"primary\">Submit</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n\r\n            <Paper className={classes.paper}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={3} style={{ marginTop: \"20px\", }}>\r\n                        <Chip style={{ width: \"80%\" }} size=\"large\" label=\"Add Skill\" fullWidth />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <TextField\r\n                            label=\"Skill\"\r\n                            fullWidth\r\n                            value={skill}\r\n                            onChange={changeSkill()}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Button\r\n                            style={{\r\n                                marginTop: \"10px\", marginLeft: \"50%\",\r\n                                backgroundColor: \"rgb(70,70,120)\",\r\n                            }}\r\n                            onClick={submitSkill}\r\n                            variant=\"contained\"\r\n                            color=\"primary\">\r\n                            Add\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={3} style={{ marginTop: \"20px\", }}>\r\n                        <Chip style={{ width: \"80%\" }} size=\"large\" label=\"Add City\" fullWidth />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <TextField\r\n                            label=\"City\"\r\n                            fullWidth\r\n                            value={city}\r\n                            onChange={changeCity()}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Button\r\n                            style={{\r\n                                marginTop: \"10px\", marginLeft: \"50%\",\r\n                                backgroundColor: \"rgb(70,70,120)\",\r\n                            }}\r\n                            onClick={submitCity}\r\n                            variant=\"contained\"\r\n                            color=\"primary\">\r\n                            Add\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"../../axios\";\r\nimport { ButtonGroup } from \"@material-ui/core\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n// import \"bootstrap/dist/css/bootstrap.css\";\r\nimport Pagination from '../../components/Pagination'\r\n\r\nconst styles = theme => ({\r\n   palette: {\r\n      type: \"dark\"\r\n   },\r\n   root: {\r\n      width: \"85%\",\r\n      marginTop: theme.spacing(3),\r\n      overflowX: \"auto\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      margin: \"auto\"\r\n   },\r\n   table: {\r\n      minWidth: 650\r\n   },\r\n   text: {\r\n      textAlign: \"center\"\r\n   },\r\n   formControl: {\r\n      margin: theme.spacing(3)\r\n   },\r\n   button: {\r\n      margin: theme.spacing(1),\r\n      marginTop: theme.spacing(5),\r\n      marginLeft: theme.spacing(115),\r\n      backgroundColor: \"rgb(70,70,120)\",\r\n      outline: \"none\"\r\n   },\r\n   group: {\r\n      margin: theme.spacing(1, 0)\r\n   }\r\n});\r\n\r\nclass BranchReport extends Component {\r\n   state = {\r\n      students: [],\r\n      checked: [],\r\n   };\r\n\r\n   constructor() {\r\n      super();\r\n      axios.post('/fetchToAdminPendingStudents')\r\n         .then((response) => {\r\n            console.log(response.data);\r\n            this.setState({ students: response.data });\r\n         })\r\n         .catch((error) => {\r\n            console.log(error);\r\n         })\r\n   }\r\n\r\n   handleChange = index => event => {\r\n      let s = this.state.students[index]\r\n      s.status = event.target.checked\r\n      let a = [...this.state.students]\r\n      a[index] = s\r\n      this.setState({\r\n         ...this.state,\r\n         students: a,\r\n      })\r\n   };\r\n\r\n   clickHandler = () => {\r\n      console.log(this.state.students)\r\n\r\n      var i = 0;\r\n      var a = []\r\n      for (i = 0; i < this.state.students.length; i++) {\r\n         if (this.state.students[i].status === true)\r\n            a.push(this.state.students[i].count);\r\n      }\r\n      console.log(a);\r\n      axios.post(\"/getStatusOfPlaced\", a)\r\n         .then((response) => {\r\n            window.location.reload(true);\r\n         })\r\n         .catch((error) => {\r\n            console.log(error);\r\n         });\r\n   };\r\n\r\n   render() {\r\n      const { classes } = this.props;\r\n      return (\r\n         <React.Fragment>\r\n            <br></br>\r\n            <br></br>\r\n            {this.state.students.length === 0 ? <div>No pending Requests</div> :\r\n               <div>\r\n                  <Paper className={classes.root}>\r\n\r\n                     <table className=\"table table-bordered table-striped\">\r\n                        <thead>\r\n                           <tr>\r\n                              <th>Roll Number</th>\r\n                              <th align=\"right\">Student Name</th>\r\n                              <th align=\"right\">Company Name</th>\r\n                              <th align=\"right\">Package LPA</th>\r\n                              <th align=\"right\">Location</th>\r\n                              <th align=\"right\">Approve</th>\r\n                           </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                           {this.state.students.map((s, index) => (\r\n                              <tr key={s.roll}>\r\n                                 <td>{s.roll}</td>\r\n                                 <td>{s.stu_name}</td>\r\n                                 <td>{s.comp_name}</td>\r\n                                 <td>{s.package_lpa}</td>\r\n                                 <td>{s.location}</td>\r\n                                 <td><FormControlLabel\r\n                                    control={\r\n                                       <Checkbox\r\n                                          onChange={this.handleChange(index)}\r\n                                          value={s.status}\r\n                                       />\r\n                                    }\r\n                                    label=\"Accept\"\r\n                                 /></td>\r\n                              </tr>\r\n                           ))}\r\n                        </tbody>\r\n                     </table>\r\n                  </Paper>\r\n                  <Button\r\n                     variant=\"contained\"\r\n                     color=\"primary\"\r\n                     id=\"printbtn\"\r\n                     className={classes.button}\r\n                     onClick={this.clickHandler}\r\n                  >\r\n                     Allot\r\n                </Button>\r\n               </div>\r\n            }\r\n         </React.Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nexport default withStyles(styles)(BranchReport);","import React, { Component } from 'react'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport { withStyles } from '@material-ui/core'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport axios from '../../axios'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\n\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nconst useStyles = (theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        padding: theme.spacing(2),\r\n        boxSizing: 'border-box',\r\n        width: '68vw',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n    },\r\n    palette: {\r\n      type: \"dark\"\r\n    },\r\n    root: {\r\n      width: \"85%\",\r\n      marginTop: theme.spacing(3),\r\n      overflowX: \"auto\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      margin: \"auto\"\r\n    },\r\n    table: {\r\n      minWidth: 650\r\n    },\r\n    text: {\r\n      textAlign: \"center\"\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(3)\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n      margin: \"auto\"\r\n    },\r\n    group: {\r\n      margin: theme.spacing(1, 0)\r\n    }\r\n}));\r\n\r\n\r\nclass PlaceStudents extends Component {\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <Paper className={classes.root}>\r\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                        <FormLabel component=\"legend\" className={classes.text}>\r\n                            Select the branch\r\n                        </FormLabel>\r\n                    </FormControl>\r\n                </Paper>\r\n            </React.Fragment>\r\n                );\r\n            }\r\n        }\r\n        \r\nexport default withStyles(useStyles)(PlaceStudents);","import React, { useEffect } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport * as jsPDF from \"jspdf\";\r\nimport * as html2canvas from \"html2canvas\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from \"@material-ui/pickers\";\r\nimport axios from \"../../../axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport ReactTooltip from \"react-tooltip\"\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { amber, green } from \"@material-ui/core/colors\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\n// import moment from \"moment\";\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  success: {\r\n    backgroundColor: green[600]\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark\r\n  },\r\n  icon: {\r\n    fontSize: 20\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  message: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    padding: theme.spacing(2),\r\n    boxSizing: \"border-box\",\r\n    width: \"68vw\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\"\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor:\"rgb(70,70,120)\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  chip: {\r\n    margin: 2\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(0),\r\n    minWidth: \"100%\",\r\n    maxWidth: \"100vw\"\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n  const classes = useStyles();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"close\"\r\n          color=\"inherit\"\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\nMySnackbarContentWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf([\"error\", \"info\", \"success\", \"warning\"]).isRequired\r\n};\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nfunction Profile(props) {\r\n  const classes = useStyles();\r\n\r\n  const [skills, setSkills] = React.useState([]);\r\n  const [cities, setCities] = React.useState([]);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/findallskills\")\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setSkills([...response.data]);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n    axios\r\n      .get(\"/findalllocation\")\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setCities([...response.data]);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const [state, setState] = React.useState({\r\n    id: \"\",\r\n    name: \"\",\r\n    cpName: \"\",\r\n    cpEmail1: \"\",\r\n    cpEmail2: \"\",\r\n    contactNo1: \"\",\r\n    contactNo2: \"\",\r\n    contactNo3: \"\",\r\n    criteria: \"\",\r\n    passiveBacklogs: false,\r\n    activeBacklogs: false,\r\n    package: \"\",\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n    numberOfStudents: \"\",\r\n    skill: [],\r\n    city: [],\r\n    branches: {\r\n      computer: false,\r\n      it: false,\r\n      entc: false\r\n    },\r\n    successSnackBar: false\r\n  });\r\n  var da = [];\r\n  const [formErrors, setError] = React.useState({\r\n    name: \"\",\r\n    cpName: \"\",\r\n    cpEmail1: \"\",\r\n    cpEmail2: \"\",\r\n    contactNo1: \"\",\r\n    contactNo2: \"\",\r\n    contactNo3: \"\",\r\n    criteria: \"\",\r\n    package: \"\",\r\n    numberOfStudents: \"\"\r\n  });\r\n\r\n  const [emptyError, setEmptyError] = React.useState({});\r\n\r\n  const keys = [\"name\", \"cpName\", \"cpEmail1\", \"contactNo1\", \"package\"];\r\n\r\n  let e = {};\r\n  function validate() {\r\n    setEmptyError({});\r\n    keys.map(key => {\r\n      if (state[key].length == 0) {\r\n        e[key] = \"Empty\";\r\n      }\r\n    });\r\n    setEmptyError(e);\r\n  }\r\n\r\n  const submitHandler = event => {\r\n    // setOpen(true);\r\n    event.preventDefault();\r\n      var resetState = {\r\n        id: \"\",\r\n        name: \"\",\r\n        cpName: \"\",\r\n        cpEmail1: \"\",\r\n        cpEmail2: \"\",\r\n        contactNo1: \"\",\r\n        contactNo2: \"\",\r\n        contactNo3: \"\",\r\n        criteria: \"\",\r\n        passiveBacklogs: false,\r\n        activeBacklogs: false,\r\n        package: \"\",\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        numberOfStudents: \"\",\r\n        skill: [],\r\n        city: [],\r\n        branches: {\r\n          computer: false,\r\n          it: false,\r\n          entc: false\r\n        },\r\n        successSnackBar: true\r\n      };\r\n    var industry = {\r\n      id: state.id,\r\n      name: state.name,\r\n      cpname: state.cpName,\r\n      cpemail1: state.cpEmail1,\r\n      cpemail2: state.cpEmail2,\r\n      contactno1: state.contactNo1,\r\n      contactno2: state.contactNo2,\r\n      contactno3: state.contactNo3,\r\n      criteria: state.criteria,\r\n      passive_backlogs: state.passiveBacklogs,\r\n      active_backlogs: state.activeBacklogs,\r\n      package_lpa: state.package,\r\n      start_date: state.startDate,\r\n      end_date: state.endDate,\r\n      no_of_students: state.numberOfStudents,\r\n      skills: state.skill,\r\n      locality: state.city,\r\n      computer: state.branches.computer,\r\n      it: state.branches.it,\r\n      entc: state.branches.entc\r\n    };\r\n    validate();\r\n    var valid = true;\r\n    if (\r\n      Object.values(formErrors).some(error => error.length > 0) ||\r\n      Object.keys(e).length > 0\r\n    ) {\r\n      valid = false;\r\n    } else {\r\n      valid = true;\r\n    }\r\n    // valid = true;\r\n    console.log(valid);\r\n    if (valid) {\r\n      axios\r\n        .post(\"/industry/add\", industry)\r\n        .then(response => {\r\n          console.log(response);\r\n          setOpen(true);\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n    setState(resetState);\r\n  };\r\n  const handleChange = name => event => {\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value\r\n    });\r\n    const value = event.target.value;\r\n    let error = \"\";\r\n    let reg = \"\";\r\n    switch (name) {\r\n      case \"cpName\":\r\n        reg = /^[A-Za-z\\s]{1,}[\\.]{0,1}[A-Za-z\\s]{0,}$/;\r\n        error = reg.test(value) ? \"\" : \"Invalid CPName\";\r\n        break;\r\n      case \"cpEmail1\":\r\n      case \"cpEmail2\":\r\n        reg = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\r\n        error = reg.test(value) ? \"\" : \"Invalid Email\";\r\n        break;\r\n      case \"contactNo1\":\r\n      case \"contactNo2\":\r\n      case \"contactNo3\":\r\n        reg = /^\\d{10}$/;\r\n        error = reg.test(value) ? \"\" : \"Invalid Phone Number\";\r\n        break;\r\n      case \"criteria\":\r\n        error =\r\n          Number(value) > 0 && Number(value) < 10 ? \"\" : \"Invalid Criteria\";\r\n        break;\r\n      case \"package\":\r\n        reg = /^[0-9]+\\.?([0-9]+)?$/;\r\n        error = reg.test(value) ? \"\" : \"Invalid Package\";\r\n        break;\r\n      case \"numberOfStudents\":\r\n        error = Number(value) > 0 ? \"\" : \"Invalid Number Of Students\";\r\n        break;\r\n    }\r\n    setError({\r\n      ...formErrors,\r\n      [name]: error\r\n    });\r\n  };\r\n\r\n  const handleChecked = name => event => {\r\n    console.log(event.target.checked);\r\n    setState({\r\n      ...state,\r\n      branches: {\r\n        ...state.branches,\r\n        [name]: event.target.checked\r\n      }\r\n    });\r\n    console.log(state.branches);\r\n  };\r\n\r\n  const handleDateChange = (date, name) => {\r\n    console.log(date);\r\n    setState({\r\n      ...state,\r\n      [name]:\r\n        date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate()\r\n    });\r\n  };\r\n\r\n  const toggleBacklogs = name => event => {\r\n    if(name===\"activeBacklogs\"&&event.target.checked){\r\n      setState({\r\n        ...state,\r\n        passiveBacklogs:true,\r\n        [name]: event.target.checked,\r\n      })\r\n    }\r\n    else if(name===\"passiveBacklogs\"&&!event.target.checked){\r\n      setState({\r\n        ...state,\r\n        activeBacklogs:false,\r\n        [name]: event.target.checked,\r\n      })\r\n    }\r\n    else{\r\n      setState({\r\n        ...state,\r\n        [name]: event.target.checked,\r\n      })\r\n    }\r\n  };\r\n\r\n  const getDates = () => {\r\n    axios\r\n      .get(\"/industry/getDateList\", null)\r\n      .then(response => {\r\n        da = response.data;\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  getDates();\r\n\r\n  const retrieve = date => {\r\n    var sa = [];\r\n\r\n    var st = [];\r\n    var n = [];\r\n    var m = [];\r\n    var y = [];\r\n    var k = [];\r\n    let i = [];\r\n    for (i = 0; i < da.length; i++) {\r\n      st[i] = new Date(da[i]);\r\n    }\r\n    console.log(st);\r\n    for (i = 0; i < st.length; i++) {\r\n      n[i] = st[i].getDate();\r\n      m[i] = st[i].getMonth();\r\n      y[i] = st[i].getFullYear();\r\n    }\r\n    console.log(n,m,y);\r\n    for (let j = 0; j < st.length; j++)\r\n      k[j] =\r\n        n[j] === date.getDate() &&\r\n        m[j] === date.getMonth() &&\r\n        y[j] === date.getFullYear();\r\n\r\n    for (i = 0; i < st.length; i++) {\r\n      if (k[i]) {\r\n        return k[i];\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\"\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n      >\r\n        <MySnackbarContentWrapper\r\n          onClose={handleClose}\r\n          variant=\"success\"\r\n          message=\"Profile added successfully!\"\r\n        />\r\n      </Snackbar>\r\n      <Paper className={classes.paper}>\r\n        <Typography component=\"h2\" variant=\"h4\" align=\"center\">\r\n          Add Company\r\n        </Typography>\r\n        <br></br>\r\n        <div id=\"divToPrint\">\r\n          <form className={classes.container} noValidate autoComplete=\"off\">\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  data-tip data-for='companyId'\r\n                  label=\"Company Id\"\r\n                  fullWidth\r\n                  onChange={handleChange(\"id\")}\r\n                  value={state.id}\r\n                />\r\n\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  data-tip data-for='companyName'\r\n                  label=\"Company Name*\"\r\n                  fullWidth\r\n                  onChange={handleChange(\"name\")}\r\n                  value={state.name}\r\n                  error={formErrors.name.length > 0 || emptyError.name}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  label=\"Contact Person Name*\"\r\n                  fullWidth\r\n                  onChange={handleChange(\"cpName\")}\r\n                  value={state.cpName}\r\n                  error={formErrors.cpName.length > 0 || emptyError.cpName}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                data-tip data-for = \"Email1\"\r\n                  label=\" Email id 1*\"\r\n                  fullWidth\r\n                  onChange={handleChange(\"cpEmail1\")}\r\n                  value={state.cpEmail1}\r\n                  error={formErrors.cpEmail1.length > 0 || emptyError.cpEmail1}\r\n                />\r\n              <ReactTooltip id='Email1' type='info' effect='solid'>\r\n              <span>Enter email in format : example@demo.com</span>\r\n              </ReactTooltip>\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  label=\" Email id 2\"\r\n                  fullWidth\r\n                  onChange={handleChange(\"cpEmail2\")}\r\n                  value={state.cpEmail2}\r\n                  error={formErrors.cpEmail2.length > 0}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  data-tip data-for = \"contact1*\" \r\n                  label=\"Contact Number 1\"\r\n                  fullWidth\r\n                  onChange={handleChange(\"contactNo1\")}\r\n                  value={state.contactNo1}\r\n                  error={\r\n                    formErrors.contactNo1.length > 0 || emptyError.contactNo1\r\n                  }\r\n                />\r\n                <ReactTooltip id='cntact1' type='info' effect='solid'>\r\n              <span>Enter 10 digit contact number</span>\r\n              </ReactTooltip>\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  label=\"Contact Number 2\"\r\n                  fullWidth\r\n                  onChange={handleChange(\"contactNo2\")}\r\n                  value={state.contactNo2}\r\n                  error={formErrors.contactNo2.length > 0}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  label=\"Contact Number 3\"\r\n                  fullWidth\r\n                  onChange={handleChange(\"contactNo3\")}\r\n                  value={state.contactNo3}\r\n                  error={formErrors.contactNo3.length > 0}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                data-tip data-for = \"criteria\"\r\n                  label=\"Criteria\"\r\n                  fullWidth\r\n                  onChange={handleChange(\"criteria\")}\r\n                  value={state.criteria}\r\n                  error={formErrors.criteria.length > 0}\r\n                />\r\n                <ReactTooltip id='criteria' type='info' effect='solid'>\r\n              <span>Enter the CGPA criteria (should be less than 10)</span>\r\n              </ReactTooltip>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  label=\"Package*\"\r\n                  fullWidth\r\n                  onChange={handleChange(\"package\")}\r\n                  value={state.package}\r\n                  error={formErrors.package.length > 0 || emptyError.package}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  label=\"Number of Students\"\r\n                  fullWidth\r\n                  onChange={handleChange(\"numberOfStudents\")}\r\n                  value={state.numberOfStudents}\r\n                  error={formErrors.numberOfStudents.length > 0}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      checked={state.passiveBacklogs}\r\n                      onChange={toggleBacklogs(\"passiveBacklogs\")}\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  style={{\r\n                    boxSizing: \"border-box\",\r\n                    marginLeft: \"50px\",\r\n                    marginTop: \"20px\"\r\n                  }}\r\n                  label=\"Accept Passive Backlogs\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      checked={state.activeBacklogs}\r\n                      onChange={toggleBacklogs(\"activeBacklogs\")}\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  style={{ boxSizing: \"border-box\", marginTop: \"20px\" }}\r\n                  label=\"Accept Active Backlogs\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <Chip\r\n                  label=\"Branches Preferred\"\r\n                  style={{\r\n                    marginTop: \"6px\",\r\n                    boxSizing: \"border-box\",\r\n                    marginLeft: \"20px\"\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={2} align=\"left\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={state.branches.computer}\r\n                      onChange={handleChecked(\"computer\")}\r\n                      value=\"computer\"\r\n                    />\r\n                  }\r\n                  label=\"Computer\"\r\n                  style={{ boxSizing: \"border-box\", marginLeft: \"30px\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={state.branches.it}\r\n                      onChange={handleChecked(\"it\")}\r\n                      value=\"it\"\r\n                    />\r\n                  }\r\n                  label=\"Information Technology\"\r\n                  style={{ boxSizing: \"border-box\", marginLeft: \"45px\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={state.branches.entc}\r\n                      onChange={handleChecked(\"entc\")}\r\n                      value=\"entc\"\r\n                    />\r\n                  }\r\n                  label=\"Electronics and Telecommunication\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    fullWidth\r\n                    label=\"Preffered date\"\r\n                    fullWidth\r\n                    value={state.startDate}\r\n                    onChange={date => handleDateChange(date, \"startDate\")}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change date\"\r\n                    }}\r\n                    shouldDisableDate={retrieve}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n\r\n              <Grid item xs={6}>\r\n                <FormControl className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"select-multiple-checkbox\">\r\n                    Skills Required\r\n                  </InputLabel>\r\n                  <Select\r\n                    multiple\r\n                    value={state.skill}\r\n                    onChange={handleChange(\"skill\")}\r\n                    input={<Input id=\"select-multiple-chip\" />}\r\n                    renderValue={selected => (\r\n                      <div className={classes.chips}>\r\n                        {selected.map(value => (\r\n                          <Chip\r\n                            key={value}\r\n                            label={value}\r\n                            className={classes.chip}\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                    MenuProps={MenuProps}\r\n                    fullWidth\r\n                  >\r\n                    {skills.map(s => (\r\n                      <MenuItem key={s} value={s}>\r\n                        <Checkbox checked={state.skill.indexOf(s) > -1} />\r\n                        <ListItemText primary={s} />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <FormControl className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"select-multiple-checkbox\">\r\n                    Locations\r\n                  </InputLabel>\r\n                  <Select\r\n                    multiple\r\n                    value={state.city}\r\n                    onChange={handleChange(\"city\")}\r\n                    input={<Input id=\"select-multiple-chip\" />}\r\n                    renderValue={selected => (\r\n                      <div className={classes.chips}>\r\n                        {selected.map(value => (\r\n                          <Chip\r\n                            key={value}\r\n                            label={value}\r\n                            className={classes.chip}\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                    MenuProps={MenuProps}\r\n                    fullWidth\r\n                  >\r\n                    {cities.map(c => (\r\n                      <MenuItem key={c} value={c}>\r\n                        <Checkbox checked={state.city.indexOf(c) > -1} />\r\n                        <ListItemText primary={c} />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} align=\"right\" onClick={submitHandler}>\r\n                <Button className={classes.button} size=\"large\" variant=\"contained\" color=\"primary\">\r\n                  Submit\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Paper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Login from \"../Login/Login\";\r\nimport CollectionsBookmark from \"@material-ui/icons/CollectionsBookmark\";\r\nimport ProtectedRoute from \"../../components/ProtectedRoute\";\r\nimport AddVisited from \"../Company/Profile/Profile\";\r\nimport Dashboard from \"../../components/Dashboard/Dashboard\";\r\nimport Profile from \"../Student/Profile/Profile\";\r\nimport EditCompany from \"./Company/EditCom\";\r\nimport Receipt from \"@material-ui/icons/Receipt\";\r\nimport BranchReport from \"./BranchReport\";\r\nimport AllCompanies from \"./Company/AllCompanies\";\r\nimport companyDetails from \"./Company/CompanyDetails\";\r\nimport CompanyDetails from \"./Company/CompanyDetails\";\r\nimport Home from \"@material-ui/icons/Home\";\r\nimport Add from \"@material-ui/icons/AddCircle\";\r\nimport AddUserIcon from \"@material-ui/icons/AddBox\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport StudentIcon from \"@material-ui/icons/ChildCare\";\r\nimport CountReport from \"./CountReport\";\r\nimport SkillsReport from \"./SkillsReport\";\r\nimport StudentReport from \"./StudentReport\";\r\nimport AddUser from \"./AddUser\";\r\nimport PendingRequests from \"./pendingRequest\";\r\nimport Place from \"@material-ui/icons/Place\";\r\nimport PlaceStudents from \"./PlaceStudents\";\r\nimport AddCompany from \"./Company/AddCompany\";\r\n\r\nclass Admin extends Component {\r\n  drawerList = {\r\n    Home: [\"\", <Home />,'See companies visiting within specific period'],\r\n    \"Add company\": [\"add-company\", <Add />,'Add a new Company from here'],\r\n    // 'Add Student': ['student-profile', <StudentIcon />],\r\n    \"Add User\": [\"add-user\", <AddUserIcon />,'Create system user (generic)' ],\r\n    \"Edit company\": [\"edit-company\", <EditIcon />,'Edit details of a specific company'], \r\n    \"Branch Report\": [\"branch-report\", <Receipt />,'Get branchwise details of students'],\r\n    \"Placement Report\": [\"placement-report\", <Receipt />,'number of placed students (company wise)'],\r\n    \"Eligibility Report\": [\"skills-report\", <Receipt />,'company wise report of placed student'],\r\n    \"Pending Request\": [\"pending-request\", <Receipt />,'Students placed by companies. Waiting for confirmation']\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Route\r\n          exact\r\n          path=\"/admin/company-details/:id\"\r\n          component={CompanyDetails}\r\n        />\r\n        <Route exact path=\"/admin/skill-report/:id\" component={StudentReport} />\r\n        {/* <Route path=\"/admin/dashboard\" component={Dashboard2} /> */}\r\n        <ProtectedRoute\r\n          path=\"/admin/dashboard\"\r\n          component={() => (\r\n            <Dashboard drawerList={this.drawerList}>\r\n              <Route\r\n                exact\r\n                path=\"/admin/dashboard/add-company\"\r\n                component={AddCompany}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/admin/dashboard/add-user\"\r\n                component={AddUser}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/admin/dashboard/student-profile\"\r\n                component={Profile}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/admin/dashboard/edit-company\"\r\n                component={EditCompany}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/admin/dashboard/branch-report\"\r\n                component={BranchReport}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/admin/dashboard/placement-report\"\r\n                component={CountReport}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/admin/dashboard/skills-report\"\r\n                component={SkillsReport}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/admin/dashboard/pending-request\"\r\n                component={PendingRequests}\r\n              />\r\n              <Route exact path=\"/admin/dashboard/\" component={AllCompanies} />\r\n              <Route\r\n                exact\r\n                path=\"/admin/dashboard/place-students\"\r\n                component={PlaceStudents}\r\n              />\r\n            </Dashboard>\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","import React, { useEffect } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport * as jsPDF from \"jspdf\";\r\nimport * as html2canvas from \"html2canvas\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from \"@material-ui/pickers\";\r\nimport axios from \"../../../axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { amber, green } from \"@material-ui/core/colors\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\n// import moment from \"moment\";\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  success: {\r\n    backgroundColor: green[600]\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark\r\n  },\r\n  icon: {\r\n    fontSize: 20\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  message: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    padding: theme.spacing(2),\r\n    boxSizing: \"border-box\",\r\n    width: \"68vw\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\"\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  chip: {\r\n    margin: 2\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(0),\r\n    minWidth: \"100%\",\r\n    maxWidth: \"100vw\"\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n  const classes = useStyles();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"close\"\r\n          color=\"inherit\"\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\nMySnackbarContentWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf([\"error\", \"info\", \"success\", \"warning\"]).isRequired\r\n};\r\n\r\nfunction JobProfile(props) {\r\n  const classes = useStyles();\r\n\r\n  const [jobDesignation, setDesignation] = React.useState([]);\r\n  const [jobDesc, setDescription] = React.useState([]);\r\n\r\n  const [formErrors, setError] = React.useState({\r\n    jobDesc: \"\",\r\n    jobDesignation: \"\"\r\n  });\r\n\r\n  const [fetched, setFetched] = React.useState({});\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\"/industry/findById\", null, {\r\n        params: { id: localStorage.getItem(\"token\") }\r\n      })\r\n      .then(response => {\r\n        console.log(response.data);\r\n        if (response.data === \"\") {\r\n        } else {\r\n          setFetched({\r\n            ...response.data\r\n          });\r\n          console.log(fetched);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const [state, setState] = React.useState({\r\n    industry: fetched,\r\n    jobDesc: \"\",\r\n    jobDesignation: \"\"\r\n  });\r\n\r\n  const [emptyError, setEmptyError] = React.useState({});\r\n\r\n  const submitHandler = event => {\r\n    // setOpen(true);\r\n    event.preventDefault();\r\n    setState({\r\n      industry: fetched,\r\n      jobDesc: \"\",\r\n      jobDesignation: \"\"\r\n    });\r\n    console.log(props);\r\n    if (state.jobDesc !== \"\" && state.jobDesignation !== \"\") {\r\n      console.log(state);\r\n      let a = {\r\n        industry : fetched,\r\n        jobDesc : state.jobDesc,\r\n        jobDesignation : state.jobDesignation,\r\n      }\r\n      console.log(a);\r\n      axios\r\n        .post(\"/industry/acceptJobDetails\",  a )\r\n        .then(response => {\r\n          console.log(response);  \r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n    // window.location.reload(true);\r\n  };\r\n  const handleChange = name => event => {\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value\r\n    });\r\n    const value = event.target.value;\r\n    let error = \"\";\r\n    let reg = \"\";\r\n    reg = /^[A-Za-z\\s]$/;\r\n    error = reg.test(value) ? \"\" : \"Invalid \";\r\n\r\n    setError({\r\n      ...formErrors,\r\n      [name]: error\r\n    });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Paper className={classes.paper}>\r\n        <Typography component=\"h2\" variant=\"h4\" align=\"center\">\r\n          Job Details\r\n        </Typography>\r\n        {/* <Divider className={classes.divider} /> */}\r\n        <div id=\"divToPrint\">\r\n          <form className={classes.container} noValidate autoComplete=\"off\">\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6} style={{ marginTop: \"20px\" }}>\r\n                <Chip\r\n                  style={{ width: \"80%\" }}\r\n                  size=\"large\"\r\n                  label=\"Designation\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  label=\"Designation\"\r\n                  value={state.jobDesignation}\r\n                  onChange={handleChange(\"jobDesignation\")}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6} style={{ marginTop: \"20px\" }}>\r\n                <Chip\r\n                  style={{ width: \"80%\" }}\r\n                  size=\"large\"\r\n                  label=\"Job Description\"\r\n                  \r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  label=\"Job description\"\r\n                  fullWidth\r\n                  multiline\r\n                  rows=\"4\"\r\n                  value={state.jobDesc}\r\n                  onChange={handleChange(\"jobDesc\")}\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Button\r\n              style={{ marginTop: \"10px\", marginLeft: \"50%\" }}\r\n              onClick={submitHandler}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Add\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Paper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default JobProfile;\r\n","import React, { Component } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"../../axios\";\r\nimport { ButtonGroup } from \"@material-ui/core\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport ReactToPrint from 'react-to-print';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst styles = theme => ({\r\n    palette: {\r\n        type: \"dark\"\r\n    },\r\n    root: {\r\n        width: \"85%\",\r\n        marginTop: theme.spacing(3),\r\n        // overflowX: \"auto\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        margin: \"auto\"\r\n    },\r\n    table: {\r\n        minWidth: 650\r\n    },\r\n    text: {\r\n        textAlign: \"center\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(3),\r\n        width: \"100%\",\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        margin: \"auto\",\r\n        marginLeft: \"47%\",\r\n        marginTop: \"2%\",\r\n        backgroundColor: \"rgb(70,70,120)\",\r\n    },\r\n    group: {\r\n        margin: theme.spacing(1, 0)\r\n    }\r\n});\r\n\r\n\r\nclass Filter extends React.Component {\r\n\r\n    state = {\r\n        students: [],\r\n        temp: [],\r\n        tenth: 0,\r\n        twelfth: 0,\r\n        sgpa: 0,\r\n        active_backlogs: true,\r\n        passive_backlogs: true,\r\n        internship: 0,\r\n        x: [],\r\n        selectAll: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.post('/industry/findById', null, { params: { id: localStorage.getItem('token') } })\r\n            .then((response) => {\r\n                if (response.data != '') {\r\n                    this.setState({\r\n                        ...this.state,\r\n                        sgpa: response.data.criteria,\r\n                        active_backlogs: response.data.active_backlogs,\r\n                        passive_backlogs: response.data.passive_backlogs,\r\n                    })\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n        axios.post('/filter', null, { params: { comp_id: localStorage.getItem('token') } })\r\n            .then((response) => {\r\n                this.setState({\r\n                    students: response.data,\r\n                    temp: response.data,\r\n                });\r\n                this.filter();\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    filter = () => {\r\n        let temp2 = [...this.state.students]\r\n        temp2 = temp2.filter((student) => {\r\n            return (\r\n                student.sgpaTEFS >= this.state.sgpa\r\n                && student.percentageTenth >= this.state.tenth\r\n                && student.percentageTwelfth >= this.state.twelfth\r\n                // && student.internship>=this.state.internship\r\n            )\r\n        })\r\n        // if (!this.state.active_backlogs) {\r\n        //     temp2 = temp2.filter((student) => { return student.activeBacklogs === false })\r\n        // }\r\n        // if (!this.state.passive_backlogs) {\r\n        //     temp2 = temp2.filter((student) => { return student.passiveBacklogs === false })\r\n        // }\r\n        this.setState({\r\n            ...this.state,\r\n            temp: temp2,\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    handleChange = (name) => (event) => {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [name]: event.target.value,\r\n        })\r\n        setTimeout(() => {\r\n            this.filter();\r\n        }, 20);\r\n\r\n    }\r\n\r\n    selectAllHandler = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            selectAll: event.target.checked,\r\n        })\r\n        if (event.target.checked) {\r\n            for (let i = 0; i < this.state.temp.length; i++) {\r\n                let s = this.state.temp[i]\r\n                let v = {\r\n                    roll: s.student.rollno,\r\n                    name: s.student.firstName,\r\n                    sgpaTEFS: s.sgpaTEFS,\r\n                    skills: s.skills,\r\n                    status: true,\r\n                }\r\n                this.state.x.push(v);\r\n            }\r\n        }\r\n        else {\r\n            this.setState({\r\n                ...this.state,\r\n                x: [],\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleChecked = (name) => (event) => {\r\n        const prev = this.state[name];\r\n        this.setState({\r\n            ...this.state,\r\n            [name]: !prev,\r\n        })\r\n    }\r\n\r\n\r\n\r\n    clickHandler = () => {\r\n        this.filter();\r\n    }\r\n    clickHandlerForAccept = () => {\r\n        var i = 0;\r\n        var a = []\r\n        for (i = 0; i < this.state.x.length; i++) {\r\n            if (this.state.x[i].status === true)\r\n                a.push(this.state.x[i].roll.toString());\r\n        }\r\n        console.log(a)\r\n        let comp_id = localStorage.getItem(\"token\");\r\n        a.push(comp_id)\r\n        axios.post(\"/selectByCompany\", a)\r\n            .then((response) => {\r\n                window.location.reload(true);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    handleChangeIndex = index => event => {\r\n        let s = this.state.temp[index]\r\n        if (!event.target.checked) {\r\n            this.state.x.splice(this.state.x.findIndex((k) => k.roll === s.student.rollno));\r\n        }\r\n        else {\r\n            let v = {\r\n                roll: s.student.rollno,\r\n                name: s.student.firstName,\r\n                sgpaTEFS: s.sgpaTEFS,\r\n                skills: s.skills,\r\n                status: event.target.checked,\r\n            }\r\n            this.state.x.push(v);\r\n        }\r\n        console.log(this.state.x);\r\n    };\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Paper className={classes.root}>\r\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                        <FormLabel component=\"legend\" className={classes.text}>\r\n                            Select the filters\r\n                        </FormLabel>\r\n                        <Grid container spacing={1} style={{ marginTop: \"2vh\" }}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    label=\"Tenth Percentage\"\r\n                                    fullWidth\r\n                                    onChange={this.handleChange(\"tenth\")}\r\n                                    value={this.state.tenth}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    label=\"Twelfth Percentage\"\r\n                                    fullWidth\r\n                                    onChange={this.handleChange(\"twelfth\")}\r\n                                    value={this.state.twelfth}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    label=\"SGPA\"\r\n                                    fullWidth\r\n                                    onChange={this.handleChange(\"sgpa\")}\r\n                                    value={this.state.sgpa}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    label=\"Number of Internships\"\r\n                                    fullWidth\r\n                                    onChange={this.handleChange(\"internship\")}\r\n                                    value={this.state.internship}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={this.state.active_backlogs}\r\n                                            onChange={this.toggleChecked('active_backlogs')}\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label=\"Accept Active Backlogs\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={this.state.passive_backlogs}\r\n                                            onChange={this.toggleChecked('passive_backlogs')}\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label=\"Accept Passive Backlogs\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </FormControl>\r\n                </Paper>\r\n                <ReactToPrint\r\n                    trigger={() => <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        id=\"printbtn\"\r\n                        className={classes.button}>\r\n                        Print\r\n                </Button>}\r\n                    content={() => this.componentRef}\r\n                />\r\n                <br></br>\r\n                <br></br>\r\n                <div style={{display:\"none\"}}>\r\n                    <table ref={el => (this.componentRef = el)} style={{margin:\"auto\"}} class=\"table table-bordered\">\r\n                        <thead>\r\n                            <th scope=\"col\">ID</th>\r\n                            <th scope=\"col\">Name</th>\r\n                            <th scope=\"col\">Roll Number</th>\r\n                            <th scope=\"col\">SGPA</th>\r\n                            <th scope=\"col\">10th Percentage</th>\r\n                            <th scope=\"col\">12th Percentage</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.temp.map((s, index) => (\r\n                                <tr>\r\n                                    <td scope=\"row\">{s.collegeId}</td>\r\n                                    <td>{s.student.firstName}</td>\r\n                                    <td>{s.roll_no}</td>\r\n                                    <td>{s.sgpaTEFS}</td>\r\n                                    <td>{s.percentageTenth}</td>\r\n                                    <td>{s.percentageTwelfth}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div>\r\n                    <Paper className={classes.root}>\r\n                        <table class=\"table table-bordered table-striped\">\r\n                            <thead>\r\n                                <th scope=\"col\">ID</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Roll Number</th>\r\n                                <th scope=\"col\">SGPA</th>\r\n                                <th scope=\"col\">10th Percentage</th>\r\n                                <th scope=\"col\">12th Percentage</th>\r\n                                <th>\r\n                                    {/* <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox\r\n                                                value={this.state.selectAll}\r\n                                                onChange={this.selectAllHandler}\r\n                                            />\r\n                                        }/> */}\r\n                                    Approve</th>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.temp.map((s, index) => (\r\n                                    <tr>\r\n                                        <td scope=\"row\">{s.collegeId}</td>\r\n                                        <td>{s.student.firstName}</td>\r\n                                        <td>{s.roll_no}</td>\r\n                                        <td>{s.sgpaTEFS}</td>\r\n                                        <td>{s.percentageTenth}</td>\r\n                                        <td>{s.percentageTwelfth}</td>\r\n                                        <td><FormControlLabel\r\n                                            control={\r\n                                                <Checkbox\r\n                                                    onChange={this.handleChangeIndex(index)}\r\n                                                    value={s.status}\r\n                                                />\r\n                                            }\r\n                                            label=\"Accept\"\r\n                                        /></td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </Paper>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        id=\"printbtn\"\r\n                        className={classes.button}\r\n                        onClick={this.clickHandlerForAccept}\r\n                    >\r\n                        Short List\r\n        </Button>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Filter);","\r\nimport React, { Component } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"../../../axios\";\r\nimport { ButtonGroup } from \"@material-ui/core\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport ReactToPrint from 'react-to-print';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst styles = theme => ({\r\n    palette: {\r\n        type: \"dark\"\r\n    },\r\n    root: {\r\n        width: \"85%\",\r\n        marginTop: theme.spacing(3),\r\n        // overflowX: \"auto\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        margin: \"auto\"\r\n    },\r\n    table: {\r\n        minWidth: 650\r\n    },\r\n    text: {\r\n        textAlign: \"center\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(3),\r\n        width: \"100%\",\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        margin: \"auto\",\r\n        marginLeft: \"80%\",\r\n        marginTop: \"2%\",\r\n        backgroundColor: \"rgb(70,70,120)\",\r\n    },\r\n    group: {\r\n        margin: theme.spacing(1, 0)\r\n    }\r\n});\r\n\r\n\r\nclass ShortListed extends React.Component {\r\n\r\n    state = {\r\n        students: [],\r\n        temp: [],\r\n        tenth: 0,\r\n        twelfth: 0,\r\n        sgpa: 0,\r\n        active_backlogs: true,\r\n        passive_backlogs: true,\r\n        internship: 0,\r\n        x: []\r\n    }\r\n    componentDidMount() {\r\n        axios.post('/short-listed', null, { params: { comp_id: localStorage.getItem('token') } })\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                this.setState({\r\n                    students: response.data,\r\n                    temp: response.data,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n\r\n    }\r\n\r\n    handleChange = (name) => (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    toggleChecked = (name) => (event) => {\r\n        const prev = this.state[name];\r\n        this.setState({\r\n            ...this.state,\r\n            [name]: !prev,\r\n        })\r\n    }\r\n\r\n\r\n    clickHandlerForAccept = () => {\r\n        var i = 0;\r\n        var a = []\r\n        for (i = 0; i < this.state.x.length; i++) {\r\n            if (this.state.x[i].status === true)\r\n                a.push(this.state.x[i].roll.toString());\r\n        }\r\n        let comp_id = localStorage.getItem(\"token\");\r\n        a.push(comp_id)\r\n        axios.post(\"/PlacedByCompany\", a)\r\n            .then((response) => {\r\n                window.location.reload(true);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n\r\n    handleChangeIndex = index => event => {\r\n        let s = this.state.students[index]\r\n        if (event.target.checked) {\r\n            let v = {\r\n                roll: s.student.rollno,\r\n                name: s.student.firstName,\r\n                sgpaTEFS: s.sgpaTEFS,\r\n                skills: s.skills,\r\n                status: true\r\n            }\r\n            this.state.x.push(v);\r\n            console.log(this.state.x);\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <div>\r\n                    <Paper className={classes.root}>\r\n                        <table class=\"table table-bordered table-striped\">\r\n                            <thead>\r\n                                <th scope=\"col\">ID</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Roll Number</th>\r\n                                <th scope=\"col\">SGPA</th>\r\n                                <th scope=\"col\">10th Percentage</th>\r\n                                <th scope=\"col\">12th Percentage</th>\r\n                                <th scope=\"col\">Place</th>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.temp.map((s, index) => (\r\n                                    <tr>\r\n                                        <td scope=\"row\">{s.collegeId}</td>\r\n                                        <td>{s.student.firstName}</td>\r\n                                        <td>{s.roll_no}</td>\r\n                                        <td>{s.sgpaTEFS}</td>\r\n                                        <td>{s.percentageTenth}</td>\r\n                                        <td>{s.percentageTwelfth}</td>\r\n                                        <td><FormControlLabel\r\n                                            control={\r\n                                                <Checkbox\r\n                                                    onChange={this.handleChangeIndex(index)}\r\n                                                    value={s.status}\r\n                                                />\r\n                                            }\r\n                                            label=\"Place\"\r\n                                        /></td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </Paper>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        id=\"printbtn\"\r\n                        className={classes.button}\r\n                        onClick={this.clickHandlerForAccept}\r\n                    >\r\n                        Allot\r\n        </Button>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ShortListed);\r\n","\r\nimport React, { Component } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"../../../axios\";\r\nimport { ButtonGroup } from \"@material-ui/core\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport ReactToPrint from 'react-to-print';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst styles = theme => ({\r\n    palette: {\r\n        type: \"dark\"\r\n    },\r\n    root: {\r\n        width: \"85%\",\r\n        marginTop: theme.spacing(3),\r\n        // overflowX: \"auto\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        margin: \"auto\"\r\n    },\r\n    table: {\r\n        minWidth: 650\r\n    },\r\n    text: {\r\n        textAlign: \"center\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(3),\r\n        width: \"100%\",\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        margin: \"auto\",\r\n        marginLeft: \"80%\",\r\n        marginTop: \"2%\",\r\n        backgroundColor: \"rgb(70,70,120)\",\r\n    },\r\n    group: {\r\n        margin: theme.spacing(1, 0)\r\n    }\r\n});\r\n\r\n\r\nclass BranchReport extends React.Component {\r\n\r\n    state = {\r\n        students: [],\r\n        temp: [],\r\n        tenth: 0,\r\n        twelfth: 0,\r\n        sgpa: 0,\r\n        active_backlogs: true,\r\n        passive_backlogs: true,\r\n        internship: 0,\r\n        x: []\r\n    }\r\n    componentDidMount() {\r\n        axios.post('/PendingSelectedByCompany', null, { params: { comp_id: localStorage.getItem('token') } })\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                this.setState({\r\n                    students: response.data,\r\n                    temp: response.data,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n\r\n    }\r\n\r\n    handleChange = (name) => (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <div>\r\n                    <ReactToPrint\r\n                        trigger={() => <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}>\r\n                            Print\r\n                            </Button>}\r\n                        content={() => this.componentRef} />\r\n                    <Paper ref={el => (this.componentRef = el)} className={classes.root}>\r\n                        <table class=\"table table-bordered table-striped\">\r\n                            <thead>\r\n                                <th scope=\"col\">ID</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Roll Number</th>\r\n                                <th scope=\"col\">SGPA</th>\r\n                                <th scope=\"col\">10th Percentage</th>\r\n                                <th scope=\"col\">12th Percentage</th>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.temp.map(s => (\r\n                                    <tr>\r\n                                        <td scope=\"row\">{s.collegeId}</td>\r\n                                        <td>{s.student.firstName}</td>\r\n                                        <td>{s.roll_no}</td>\r\n                                        <td>{s.sgpaTEFS}</td>\r\n                                        <td>{s.percentageTenth}</td>\r\n                                        <td>{s.percentageTwelfth}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </Paper>\r\n\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(BranchReport);\r\n","\r\nimport React, { Component } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"../../../axios\";\r\nimport { ButtonGroup } from \"@material-ui/core\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport ReactToPrint from 'react-to-print';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst styles = theme => ({\r\n    palette: {\r\n        type: \"dark\"\r\n    },\r\n    root: {\r\n        width: \"85%\",\r\n        marginTop: theme.spacing(3),\r\n        // overflowX: \"auto\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        margin: \"auto\"\r\n    },\r\n    table: {\r\n        minWidth: 650\r\n    },\r\n    text: {\r\n        textAlign: \"center\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(3),\r\n        width: \"100%\",\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        margin: \"auto\",\r\n        marginLeft: \"80%\",\r\n        marginTop: \"2%\",\r\n        backgroundColor: \"rgb(70,70,120)\",\r\n    },\r\n    group: {\r\n        margin: theme.spacing(1, 0)\r\n    }\r\n});\r\n\r\n\r\nclass BranchReport extends React.Component {\r\n\r\n    state = {\r\n        students: [],\r\n        temp: [],\r\n        tenth: 0,\r\n        twelfth: 0,\r\n        sgpa: 0,\r\n        active_backlogs: true,\r\n        passive_backlogs: true,\r\n        internship: 0,\r\n        x: []\r\n    }\r\n    componentDidMount() {\r\n        axios.post('/FinalPlaced', null, { params: { comp_id: localStorage.getItem('token') } })\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                this.setState({\r\n                    students: response.data,\r\n                    temp: response.data,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n\r\n    }\r\n\r\n    handleChange = (name) => (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <div>\r\n                    <ReactToPrint\r\n                        trigger={() => <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}>\r\n                            Print\r\n                            </Button>}\r\n                        content={() => this.componentRef} />\r\n                    <Paper ref={el => (this.componentRef = el)} className={classes.root}>\r\n                        <table class=\"table table-bordered table-striped\">\r\n                            <thead>\r\n                                <th scope=\"col\">ID</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Roll Number</th>\r\n                                <th scope=\"col\">SGPA</th>\r\n                                <th scope=\"col\">10th Percentage</th>\r\n                                <th scope=\"col\">12th Percentage</th>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.temp.map(s => (\r\n                                    <tr>\r\n                                        <td scope=\"row\">{s.collegeId}</td>\r\n                                        <td>{s.student.firstName}</td>\r\n                                        <td>{s.roll_no}</td>\r\n                                        <td>{s.sgpaTEFS}</td>\r\n                                        <td>{s.percentageTenth}</td>\r\n                                        <td>{s.percentageTwelfth}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </Paper>\r\n\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(BranchReport);\r\n","\r\nimport React, { Component } from \"react\";\r\nimport { Route, withRouter, Redirect } from \"react-router-dom\";\r\nimport Login from \"../Login/Login\";\r\nimport ProtectedRoute from \"../../components/ProtectedRoute\";\r\nimport Dashboard from \"../../components/Dashboard/Dashboard\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport Profile from \"./Profile/Profile\";\r\nimport Job_Details from \"./Profile/JobDetails\";\r\nimport Filter from './Filter'\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport ShortListed from './Eligible/ShortListed';\r\nimport Pending_Selected from './Eligible/PendingSelected';\r\nimport Placed from './Eligible/Placed';\r\nimport ReactTooltip from \"react-tooltip\"\r\nclass Company extends Component {\r\n  drawerList = {\r\n    'Profile': ['profile', <DashboardIcon />, 'See and edit Profile'],\r\n    'Filter': ['eligible-students2', <FilterListIcon />, 'Sort students by applying filters'],\r\n    'JobDetails': ['job-details', <DoneOutlineIcon />, 'Add job Description'],\r\n    'Short Listed': [\"short-listed\", <DashboardIcon />, 'Shortlist from all eligible students'],\r\n    'Pending Selected': [\"pending-selected\", <DashboardIcon />, 'Selected students - Pending confirmation from PICT'],\r\n    'Placed': [\"placed\", <DashboardIcon />, 'See students you have placed']\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ProtectedRoute path=\"/company/dashboard\" component={() =>\r\n          <Dashboard drawerList={this.drawerList}>\r\n            <Route exact path=\"/company/dashboard\" component={Profile} />\r\n            <Route exact path=\"/company/dashboard/profile\" component={Profile} />\r\n            <Route exact path=\"/company/dashboard/eligible-students2\" component={Filter} />\r\n            <Route exact path=\"/company/dashboard/job-details\" component={Job_Details} />\r\n            <Route exact path=\"/company/dashboard/short-listed\" component={ShortListed} />\r\n            <Route exact path=\"/company/dashboard/pending-selected\" component={Pending_Selected} />\r\n            <Route exact path=\"/company/dashboard/placed\" component={Placed} />\r\n          </Dashboard>\r\n        } />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(Company);\r\n","import React,{ Component } from 'react';\r\nimport './App.css';\r\nimport Role from './Role'\r\nimport { Switch, Route, withRouter } from 'react-router-dom'\r\nimport Student from './containers/Student/Student'\r\nimport Admin from './containers/Admin/Admin'\r\nimport Company from './containers/Company/Company'\r\nimport Login from './containers/Login/Login'\r\n\r\nclass App extends Component {\r\n\r\n  render(){\r\n    //localStorage.removeItem(\"token\");\r\n    return(\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Login} />\r\n        <Route path=\"/student\" component={Student} />\r\n        <Route path=\"/company\" component={Company} />\r\n        <Route path=\"/admin\" component={Admin} />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default (App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as actionTypes from '../actions/Student'\r\n\r\nconst initialState = {\r\n    rollno: '',\r\n    aadharNumber: '',\r\n    pancardNumber: '',\r\n    firstName: '',\r\n    middleName: '',\r\n    lastName: '',\r\n    mobileNumber1: '',\r\n    mobileNumber2: '',\r\n    email: '',\r\n    alternateEmail: '',\r\n    dateOfBirth: new Date(),\r\n    gender: '',\r\n    currentAddress: '',\r\n    permanentAddress: '',\r\n    fatname: '',\r\n    motname: '',\r\n    disability:'',\r\n    anninc:'',\r\n    occupation:'',\r\n    valid: false,\r\n    formErrors: {\r\n        rollno: '',\r\n        aadharNumber: '',\r\n        //pancardNumber:'',\r\n        email:'',\r\n        alternateEmail:'',\r\n        mobileNumber1:'',\r\n        mobileNumber2:'',\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    \r\n    let value = action.value == undefined ? '': action.value\r\n    switch (action.type) {\r\n        case actionTypes.CHANGE:\r\n            let errors = {\r\n                ...state.formErrors,\r\n            }\r\n            let error = ''\r\n            switch (action.parName) {\r\n                case 'rollno':\r\n                    error = (value.length ===5 && value[0]==='3') ? '': 'TE roll number should be 5 digits and start with 3'\r\n                    break;\r\n                case 'aadharNumber':\r\n                    error = (value.length === 12)? '' : 'Aadhar number should be 12 digits'\r\n                    break;\r\n                case 'mobileNumber1':\r\n                case 'mobileNumber2':\r\n                    const reg2 = /^\\d{10}$/\r\n                    error = ( reg2.test(value)) ? '' : 'Mobile number should be 10 digits';\r\n                    break;\r\n                case 'email':\r\n                case 'alternateEmail':\r\n                    const reg = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/\r\n                    error = reg.test(value)? '':'Invalid email'\r\n            }\r\n            errors = {\r\n                ...errors,\r\n                [action.parName]: error,\r\n            }\r\n            let v = true;\r\n            if (Object.values(errors).some((error) => error.length > 0)) {\r\n                v = false;\r\n            }\r\n            return {\r\n                ...state,\r\n                [action.parName]: action.value,\r\n                formErrors: {\r\n                    ...errors,\r\n                },\r\n                valid: v,\r\n            }\r\n        case actionTypes.CHANGE_DATE:\r\n            return {\r\n                ...state,\r\n                [action.parName]: action.value,\r\n            }\r\n        case actionTypes.HANDLE_NEXT_PERSONAL:\r\n            return {\r\n                ...state,\r\n            }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/Student'\r\n\r\nconst initialState = {\r\n    branch: '',\r\n    collegeId: '',\r\n    prnNumber: '',\r\n    diploma: false,\r\n    twelfth: false,\r\n    percentage: {\r\n        tenth: '',\r\n        twelfth: '',\r\n        diploma: '',\r\n        engineering: '',\r\n    },\r\n    boardOfEducation: {\r\n        tenth: '',\r\n        twelfth: '',\r\n        diploma: '',\r\n    },\r\n    yearOfPassing: {\r\n        tenth: new Date(),\r\n        twelfth: new Date(),\r\n        diploma: new Date(),\r\n    },\r\n    educationGap: {\r\n        tenth: '',\r\n        twelfth: '',\r\n        diploma: '',\r\n    },\r\n    reasonOfGap: {\r\n        tenth: '',\r\n        twelfth: '',\r\n        diploma: '',\r\n    },\r\n    engineeringStartYear: new Date(),\r\n    sgpa: {\r\n        fefs: '',\r\n        fess: '',\r\n        sefs: '',\r\n        sess: '',\r\n        tefs: '',\r\n        tess: '',\r\n        aggregate: '',\r\n    },\r\n    marks: {\r\n        fefs: '',\r\n        fess: '',\r\n        sefs: '',\r\n        sess: '',\r\n        tefs: '',\r\n        tess: '',\r\n    },\r\n    activeBacklogs: '',\r\n    passiveBacklogs: '',\r\n    yeardowns: '',\r\n    skill:[],\r\n    valid: false,\r\n    formErrors: {\r\n        percentage: {\r\n            tenth: '',\r\n            twelfth: '',\r\n            diploma: '',\r\n            engineering: '',\r\n        },\r\n        sgpa: {\r\n            fefs: '',\r\n            fess: '',\r\n            sefs: '',\r\n            sess: '',\r\n            tefs: '',\r\n            tess: '',\r\n            aggregate: '',\r\n        },\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    let value = action.value == undefined ? '' : action.value\r\n    switch (action.type) {\r\n        case actionTypes.CHANGE:\r\n            return {\r\n                ...state,\r\n                [action.parName]: action.value,\r\n            }\r\n        case actionTypes.CHANGE2:\r\n            let par = [action.par1Name]\r\n            let par2 = [action.par2Name]\r\n            let errors = {\r\n                ...state.formErrors,\r\n            }\r\n            let error = ''\r\n            console.log(par);\r\n            switch (action.par1Name) {\r\n                case 'percentage':\r\n                    console.log(Number(value))\r\n                    error = (Number(value) <= 100) ? '' : 'Percentage cannot be > 100';\r\n                    console.log(error);\r\n                    break;\r\n                case 'sgpa':\r\n                    error = (Number(value) <= 10) ? '' : 'SGPA cannot be >10';\r\n                    console.log(error);\r\n                    break;\r\n            }\r\n            errors = {\r\n                ...errors,\r\n                [par]: {\r\n                    ...errors[par],\r\n                    [par2]: error,\r\n                }\r\n            }\r\n            let v = true;\r\n            if (Object.values(errors['percentage']).concat(Object.values(errors['sgpa'])).some((error) => error.length > 0)) {\r\n                v = false;\r\n            }\r\n            return {\r\n                ...state,\r\n                [par]: {\r\n                    ...state[par],\r\n                    [par2]: action.value\r\n                },\r\n                formErrors: {\r\n                    ...errors,\r\n                },\r\n                valid: v,\r\n            }\r\n        case actionTypes.CHANGE_DATE:\r\n            return {\r\n                ...state,\r\n                [action.parName]: action.value,\r\n            }\r\n        case actionTypes.CHANGE_YEAR_OF_PASSING:\r\n            return {\r\n                ...state,\r\n                yearOfPassing: { ...state.yearOfPassing, [action.parName]: action.value }\r\n            }\r\n        case actionTypes.CHANGE_SWITCH:\r\n            console.log(action.value);\r\n            return {\r\n                ...state,\r\n                [action.parName]: action.value,\r\n            }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default reducer;\r\n","import React from 'react'\r\nimport { combineReducers } from 'redux'\r\nimport PersonalReducer from './Personal'\r\nimport AcademicReducer from './Academic'\r\n\r\nconst rootReducer = combineReducers({\r\n    personal: PersonalReducer,\r\n    academic: AcademicReducer,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport RootReducer from './reducers/rootReducer'\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nconst store = createStore(RootReducer);\r\n\r\nconst app = (\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </BrowserRouter>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}